{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/common/sncak-bar/sncak-bar.component.ts","webpack:///src/app/common/sncak-bar/sncak-bar.component.html","webpack:///src/app/core/material.module.ts","webpack:///src/app/date-format.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/auth/auth.component.ts","webpack:///src/app/pages/auth/auth.component.html","webpack:///src/app/pages/cash-book/cash-book-home/cash-book-home.component.ts","webpack:///src/app/pages/cash-book/cash-book-home/cash-book-home.component.html","webpack:///src/app/pages/cash-book/cash-book.component.ts","webpack:///src/app/pages/cash-book/cash-book.component.html","webpack:///src/app/pages/header/header.component.ts","webpack:///src/app/pages/header/header.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/home/picture-carousel/picture-carousel.component.ts","webpack:///src/app/pages/home/picture-carousel/picture-carousel.component.html","webpack:///src/app/pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component.ts","webpack:///src/app/pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component.html","webpack:///src/app/pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component.ts","webpack:///src/app/pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component.html","webpack:///src/app/pages/income-expenditure/income-expenditure-home/income-expenditure-home.component.ts","webpack:///src/app/pages/income-expenditure/income-expenditure-home/income-expenditure-home.component.html","webpack:///src/app/pages/income-expenditure/income-expenditure.component.ts","webpack:///src/app/pages/income-expenditure/income-expenditure.component.html","webpack:///src/app/pages/ledger/ledger.component.ts","webpack:///src/app/pages/ledger/ledger.component.html","webpack:///src/app/pages/owner/owner.component.ts","webpack:///src/app/pages/owner/owner.component.html","webpack:///src/app/pages/payment/payment.component.ts","webpack:///src/app/pages/payment/payment.component.html","webpack:///src/app/pages/receive/receive.component.ts","webpack:///src/app/pages/receive/receive.component.html","webpack:///src/app/pages/transaction-report/transaction-report.component.ts","webpack:///src/app/pages/transaction-report/transaction-report.component.html","webpack:///src/app/services/asset.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth-interceptor.interceptor.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cash-book.service.ts","webpack:///src/app/services/ledger.service.ts","webpack:///src/app/services/payment.service.ts","webpack:///src/app/services/receive.service.ts","webpack:///src/app/services/report.service.ts","webpack:///src/app/shared/global.ts","webpack:///src/app/shared/loading-spinner/loading-spinner.component.ts","webpack:///src/app/shared/loading-spinner/loading-spinner.component.html","webpack:///src/app/shared/loaidng-ellipsis/loaidng-ellipsis.component.ts","webpack:///src/app/shared/loaidng-ellipsis/loaidng-ellipsis.component.html","webpack:///src/app/shared/loaidng-hourglass/loaidng-hourglass.component.ts","webpack:///src/app/shared/loaidng-hourglass/loaidng-hourglass.component.html","webpack:///src/app/shared/loaidng-ripple/loaidng-ripple.component.ts","webpack:///src/app/shared/loaidng-ripple/loaidng-ripple.component.html","webpack:///src/app/shared/loaidng-roller/loaidng-roller.component.ts","webpack:///src/app/shared/loaidng-roller/loaidng-roller.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","mediaObserver","authService","title","active","events","faCoffee","faBaby","mediaSub","media$","subscribe","result","console","log","mqAlias","deviceXs","autoLogin","unsubscribe","selector","templateUrl","styleUrls","AppModule","dateAdapter","setLocale","provide","useClass","multi","declarations","providers","bootstrap","ConfirmationDialogComponent","activeModal","close","dismiss","decline","accept","message","btnOkText","btnCancelText","SncakBarComponent","data","MaterialModule","SUPPORTS_INTL_API","Intl","DateFormat","useUtcForDisplay","value","indexOf","str","split","year","Number","month","date","Date","timestamp","parse","isNaN","User","personName","_authKey","personTypeId","AuthComponent","storage","router","isLoginMode","isLoading","form","authObserable","md5","passwordMd5","appendStr","password","end","login","email","response","success","user","person_type_id","navigate","r","alert","error","CashBookHomeComponent","cashBookService","cashBookList","getCashBookList","getCashBookListListener","CashBookComponent","formBuilder","bookService","bookForm","book","required","$allBooks","getAllBooks","$filteredBooks","valueChanges","pipe","filterBooks","filterValue","toLowerCase","name","books","filter","includes","undefined","saveBook","resetForm","reset","get","onFormSubmit","HeaderComponent","isAuthenticated","isOwner","isManager","isWorker","userSub","logout","color","HomeComponent","httpClient","_sanitizer","products","centered","disabled","unbounded","images","map","n","videoUrl","safeURL","bypassSecurityTrustResourceUrl","PictureCarouselComponent","pictureDetails","paused","unpauseOnArrow","pauseOnIndicator","pauseOnHover","carousel","cycle","pause","slideEvent","source","ARROW_LEFT","ARROW_RIGHT","togglePaused","INDICATOR","onSlide","IncomeExpenditureByMonthComponent","route","reportService","incomeTotal","expenditureTotal","surplus","months","deficit","sub","params","searchMonth","searchYear","getIncomeGroupTotalListByYearAndMonth","incomeList","reduce","total","record","amount","getExpenditureGroupTotalListByYearAndMonth","expenditureList","IncomeExpenditureByYearComponent","IncomeExpenditureHomeComponent","transactionYears","IncomeExpenditureComponent","transactionMonths","getTransactionYears","getTransactionYearsUpdateListener","reportSearchForm","$event","index","findIndex","x","transaction_year","LedgerComponent","ledgerService","ledgerTypes","ledger_type_name","ledgerForm","incomeLedgers","getIncomeLedgers","getIncomeLedgersUpdateListener","expenditureLedgers","getExpenditureLedgers","getExpenditureLedgersUpdateListener","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","saveLedger","position","showConfirmButton","timer","patchValue","ledger_name","footer","OwnerComponent","arr","checked","filtered","a","o","push","pilots","years","faction","totalYears","accumulator","pilot","empire","objArray","foo","bar","baz","result2","transactionForm","PaymentComponent","paymentService","asstService","assets","expenditureTransactions","pageSize","p","getAssets","getAssetsUpdateListener","expenditureTransactionSubject","getTransactionDetails","val","transaction_date","saveExpenditureTransaction","ledger_id","asset_id","particulars","voucher_number","now","handleTransactionDateChange","target","select","clearTransactionForm","incomeTransactions","ReceiveComponent","receiveService","getIncomeTransactions","getIncomeTransactionUpdateListener","saveIncomeTransaction","TransactionReportComponent","getTransactionsUpdateListener","AssetService","http","assetsSubject","BASE_API_URL","handleError","next","asObservable","errorResponse","status","location","reload","statusText","err","Response","providedIn","AuthGuardService","state","AuthInterceptorInterceptor","localStorage","getItem","userData","JSON","authReq","clone","headers","set","handle","handleAuthError","AuthService","loadedUser","authKey","loginData","post","resData","person_name","token","original","access_token","setItem","stringify","removeItem","CashBookService","cashBookSubject","LedgerService","incomeLedgerSubject","expenditureLedgerSubject","ledger_type_id","ledgerData","unshift","PaymentService","voucher_id","maxLength","user_id","transactionFormValue","ReceiveService","incomeTransactionSubject","ALL_BOOKS","writer","ReportService","transactionYearSubject","search_year","search_month","GlobalVariable","Object","freeze","LoadingSpinnerComponent","LoaidngEllipsisComponent","LoaidngHourglassComponent","LoaidngRippleComponent","LoaidngRollerComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport {AuthComponent} from './pages/auth/auth.component';\r\nimport {AuthGuardService} from './services/auth-guard.service';\r\nimport {OwnerComponent} from './pages/owner/owner.component';\r\nimport {ReceiveComponent} from './pages/receive/receive.component';\r\nimport {PaymentComponent} from './pages/payment/payment.component';\r\nimport {TransactionReportComponent} from './pages/transaction-report/transaction-report.component';\r\nimport {IncomeExpenditureComponent} from './pages/income-expenditure/income-expenditure.component';\r\nimport {IncomeExpenditureHomeComponent} from './pages/income-expenditure/income-expenditure-home/income-expenditure-home.component';\r\nimport {IncomeExpenditureByYearComponent} from './pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component';\r\nimport {IncomeExpenditureByMonthComponent} from './pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component';\r\nimport {LedgerComponent} from './pages/ledger/ledger.component';\r\nimport {CashBookComponent} from \"./pages/cash-book/cash-book.component\";\r\nimport {CashBookHomeComponent} from \"./pages/cash-book/cash-book-home/cash-book-home.component\";\r\n\r\n\r\n// @ts-ignore\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'auth', component: AuthComponent},\r\n  {path: 'owner', canActivate:  [AuthGuardService], component: OwnerComponent},\r\n  {path: 'receive', canActivate:  [AuthGuardService], component: ReceiveComponent},\r\n  {path: 'payment', canActivate:  [AuthGuardService], component: PaymentComponent},\r\n  {path: 'ledger', canActivate:  [AuthGuardService], component: LedgerComponent},\r\n  {path: 'transactions', canActivate:  [AuthGuardService], component: TransactionReportComponent},\r\n  {path: 'incomeAndExpenditure', canActivate:  [AuthGuardService], component: IncomeExpenditureComponent,\r\n    children: [\r\n      {path: '', component: IncomeExpenditureHomeComponent, pathMatch: 'full'},\r\n      {path: 'incomeAndExpenditureByYear/:year', component: IncomeExpenditureByYearComponent},\r\n      {path: 'incomeAndExpenditureByMonth/:year/:month', component: IncomeExpenditureByMonthComponent},\r\n    ]\r\n  },\r\n  {path: 'cashBook', canActivate:  [AuthGuardService], component: CashBookComponent,\r\n    children: [\r\n      {path: '', component: CashBookHomeComponent, pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport { NgbButtonsModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBaby } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { Subscription } from 'rxjs';\r\nimport {AuthService} from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy{\r\n  title = 'base-project';\r\n  active = 1;\r\n  events: string[] = [];\r\n  opened: boolean;\r\n  faCoffee = faCoffee;\r\n  faBaby = faBaby;\r\n  mediaSub: Subscription;\r\n  deviceXs: boolean;\r\n  constructor(public mediaObserver: MediaObserver, private authService: AuthService){\r\n  }\r\n  ngOnInit(): void {\r\n      this.mediaSub = this.mediaObserver.media$.subscribe(\r\n        (result: MediaChange) => {\r\n          console.log(result.mqAlias);\r\n          this.deviceXs = (result.mqAlias === 'xs' ? true : false);\r\n        }\r\n      );\r\n\r\n      this.authService.autoLogin();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.mediaSub.unsubscribe();\r\n  }\r\n}\r\n","<!--<div fxLayout=\"column\" fxFlexFill>-->\r\n<!--  <app-header [deviceXs]=\"deviceXs\"></app-header>-->\r\n<!--  <div fxLayout=\"column\" fxFill>-->\r\n<!--    <div fxFlex=\"column grow\" style=\"margin: 0%\">-->\r\n<!--      <router-outlet></router-outlet>-->\r\n<!--    </div>-->\r\n<!--    <footer fxLayout=\"column\">-->\r\n<!--      <div fxLayout=\"row\">-->\r\n<!--        <hr fxFlex=\"100\">-->\r\n<!--      </div>-->\r\n<!--      <p fxFlexAlign=\"center\">Copy Right CODER</p>-->\r\n<!--    </footer>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">-->\r\n<!--  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\">-->\r\n<!--      <app-header [deviceXs]=\"deviceXs\"></app-header>-->\r\n<!--  </div>-->\r\n<!--  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\" style=\"margin-top: 70px\">-->\r\n<!--    <router-outlet></router-outlet>-->\r\n<!--  </div>-->\r\n\r\n\r\n<!--  <div fxFlex fxLayoutAlign=\"start end\" class=\"bottom-div\">-->\r\n<!--    BOTTOM ELEMENT: This div is filled and text is aligned in the end-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n\r\n<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">\r\n  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\">\r\n    <app-header [deviceXs]=\"deviceXs\"></app-header>\r\n  </div>\r\n  <div fxFlex=\"1\"  fxLayout=\"column\" flexLayoutAlign=\"center center\"  style=\"margin-top: 70px; min-height: 80vh\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n\r\n  <div fxFlexFill fxLayoutAlign=\"start end\" class=\"bottom-div\" style=\"background-color: #2e2e2e\">\r\n    Receipt & Payment Account\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">-->\r\n<!--  <app-header [deviceXs]=\"deviceXs\" fxFlex=\"1\" fxLayout=\"col\" flexLayoutAlign=\"center center\"></app-header>-->\r\n\r\n<!--      <div fxFlex=\"column grow\">-->\r\n<!--        <router-outlet></router-outlet>-->\r\n<!--      </div>-->\r\n\r\n\r\n<!--  <div fxFlex fxLayoutAlign=\"start end\" class=\"bottom-div\">-->\r\n<!--    <footer fxLayout=\"column\">-->\r\n<!--      <div fxLayout=\"row\">-->\r\n<!--        <hr fxFlex=\"100\">-->\r\n<!--      </div>-->\r\n<!--      <p fxFlexAlign=\"center\">Copy Right CODER</p>-->\r\n<!--    </footer>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HeaderComponent } from './pages/header/header.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { MaterialModule } from './core/material.module';\r\n\r\n\r\n\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HomeComponent } from './pages/home/home.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { PictureCarouselComponent } from './pages/home/picture-carousel/picture-carousel.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport { AuthComponent } from './pages/auth/auth.component';\r\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\r\nimport {AuthInterceptorInterceptor} from './services/auth-interceptor.interceptor';\r\nimport { OwnerComponent } from './pages/owner/owner.component';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { SncakBarComponent } from './common/sncak-bar/sncak-bar.component';\r\nimport { ConfirmationDialogComponent } from './common/confirmation-dialog/confirmation-dialog.component';\r\nimport { LoaidngRippleComponent } from './shared/loaidng-ripple/loaidng-ripple.component';\r\nimport { LoaidngEllipsisComponent } from './shared/loaidng-ellipsis/loaidng-ellipsis.component';\r\nimport { LoaidngHourglassComponent } from './shared/loaidng-hourglass/loaidng-hourglass.component';\r\nimport { LoaidngRollerComponent } from './shared/loaidng-roller/loaidng-roller.component';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { DateFormat } from './date-format';\r\nimport { ReceiveComponent } from './pages/receive/receive.component';\r\nimport { PaymentComponent } from './pages/payment/payment.component';\r\nimport { TransactionReportComponent } from './pages/transaction-report/transaction-report.component';\r\nimport { IncomeExpenditureComponent } from './pages/income-expenditure/income-expenditure.component';\r\nimport { IncomeExpenditureHomeComponent } from './pages/income-expenditure/income-expenditure-home/income-expenditure-home.component';\r\nimport { IncomeExpenditureByYearComponent } from './pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component';\r\nimport { IncomeExpenditureByMonthComponent } from './pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component';\r\nimport { LedgerComponent } from './pages/ledger/ledger.component';\r\nimport { CashBookComponent } from './pages/cash-book/cash-book.component';\r\nimport { CashBookHomeComponent } from './pages/cash-book/cash-book-home/cash-book-home.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    PictureCarouselComponent,\r\n    AuthComponent,\r\n    LoadingSpinnerComponent,\r\n    OwnerComponent,\r\n    SncakBarComponent,\r\n    ConfirmationDialogComponent,\r\n    LoaidngRippleComponent,\r\n    LoaidngEllipsisComponent,\r\n    LoaidngHourglassComponent,\r\n    LoaidngRollerComponent,\r\n    ReceiveComponent,\r\n    PaymentComponent,\r\n    TransactionReportComponent,\r\n    IncomeExpenditureComponent,\r\n    IncomeExpenditureHomeComponent,\r\n    IncomeExpenditureByYearComponent,\r\n    IncomeExpenditureByMonthComponent,\r\n    LedgerComponent,\r\n    CashBookComponent,\r\n    CashBookHomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxPrintModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorInterceptor, multi: true},\r\n              {provide: DateAdapter, useClass: DateFormat} ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(private dateAdapter: DateAdapter<Date>) {\r\n    dateAdapter.setLocale('en-in'); // DD/MM/YYYY\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ title }}</h4>\r\n<!--  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">-->\r\n<!--    <span aria-hidden=\"true\"><mat-icon>cancel</mat-icon></span>-->\r\n<!--  </button>-->\r\n  <button mat-icon-button color=\"primary\" aria-label=\"Colose\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ message }}\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{ btnCancelText }}</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-update-sncak-bar',\r\n  templateUrl: './sncak-bar.component.html',\r\n  styleUrls: ['./sncak-bar.component.scss']\r\n})\r\nexport class SncakBarComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<span class=\"example-pizza-party\">\r\n  🟢 {{data.message}}\r\n</span>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\n\r\n\r\n\r\n// @ts-ignore\r\n@NgModule({\r\n  exports: [\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatNativeDateModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n","import {NativeDateAdapter} from '@angular/material/core';\r\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\r\n\r\nexport class DateFormat extends NativeDateAdapter {\r\n  useUtcForDisplay = true;\r\n  parse(value: any): Date | null {\r\n    if (typeof value === 'string' && value.indexOf('/') > -1) {\r\n      const str = value.split('/');\r\n      const year = Number(str[2]);\r\n      const month = Number(str[1]) - 1;\r\n      const date = Number(str[0]);\r\n      return new Date(year, month, date);\r\n    }\r\n    const timestamp = typeof value === 'number' ? value : Date.parse(value);\r\n    return isNaN(timestamp) ? null : new Date(timestamp);\r\n  }\r\n}\r\n\r\n","\r\n\r\nexport class User{\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(public id: number,\r\n              public personName: string,\r\n              // tslint:disable-next-line:variable-name\r\n              private _authKey: string,\r\n              public personTypeId: number\r\n  ){}\r\n\r\n\r\n\r\n  get authKey(){\r\n    if (this._authKey){\r\n      return this._authKey;\r\n    }else {\r\n      return null;\r\n    }\r\n  }\r\n  get isAuthenticated(){\r\n    if (this._authKey){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  get isOwner(){\r\n    // tslint:disable-next-line:triple-equals\r\n     return this.personTypeId == 1;\r\n  }\r\n  get isManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 2;\r\n  }\r\n  get isWorkshopManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 3;\r\n  }\r\n  get isSalesManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 4;\r\n  }\r\n  get isAccountManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 5;\r\n  }\r\n  get isOfficeStaff(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 6;\r\n  }\r\n  get isAgent(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 7;\r\n  }\r\n  get isWorker(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 8;\r\n  }\r\n  get isDeveloper(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 9;\r\n  }\r\n  get isCustomer(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 10;\r\n  }\r\n  get isKarigarh(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 11;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {AuthResponseData, AuthService} from '../../services/auth.service';\r\nimport {StorageMap} from '@ngx-pwa/local-storage';\r\nimport {Md5} from 'ts-md5';\r\nimport {Observable} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  isLoginMode = true;\r\n  isLoading = false;\r\n\r\n  constructor(private authService: AuthService, private storage: StorageMap, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n  onSubmit(form: NgForm){\r\n    this.isLoading = true;\r\n    let authObserable = new Observable<AuthResponseData>();\r\n    // converting password to MD5\r\n    const md5 = new Md5();\r\n    const passwordMd5 = md5.appendStr(form.value.password).end();\r\n    // const formPassword = form.value.password;\r\n\r\n    authObserable = this.authService.login({email: form.value.email, password: passwordMd5});\r\n    authObserable.subscribe(response => {\r\n      // tslint:disable-next-line:triple-equals\r\n      if (response.success === 1){\r\n        this.isLoading = false;\r\n        // tslint:disable-next-line:triple-equals\r\n        if (response.user.person_type_id == 1){\r\n          this.router.navigate(['/owner']).then(r => {});\r\n        }\r\n      }else{\r\n        alert('Check user id or Password');\r\n        this.isLoading = false;\r\n      }\r\n    }, (error) => {\r\n      console.log('error occured ');\r\n      console.log(error);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlex=\"30\" fxLayoutAlign=\"space-between\" fxFlexFill id=\"login-outer-div\">\r\n  <div *ngIf=\"isLoading\" fxLayout.xs=\"column\" fxLayout=\"row\" fxFlex=\"50\" fxLayoutAlign=\"space-between stretch\" fxFlexFill>\r\n    <div  style=\"text-align: center; height: 90vh;\" >\r\n      <app-loading-spinner></app-loading-spinner>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!isLoading\"  fxLayout=\"column\" fxLayoutAlign=\"center\"  fxFlex=\"90\" class=\"mr-1\">\r\n    <mat-card style=\"min-height: 80vh;\">\r\n      <mat-card-title>\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"!isLoading\" style=\"text-align: center\">Login</mat-card-title>\r\n      <mat-card-content >\r\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\"\r\n                     id=\"email\"\r\n                     class=\"\"\r\n                     ngModel\r\n                     name=\"email\"\r\n                     required\r\n                     minlength=\"6\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput id=\"password\" class=\"\" ngModel name=\"password\" placeholder=\"Password\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"button\">\r\n            <button mat-button class=\"btn btn-primary\" type=\"submit\" >Login</button>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CashBookService} from '../../../services/cash-book.service';\r\nimport {CashBook} from '../../../models/cash-book.model';\r\n\r\n@Component({\r\n  selector: 'app-cash-book-home',\r\n  templateUrl: './cash-book-home.component.html',\r\n  styleUrls: ['./cash-book-home.component.scss']\r\n})\r\nexport class CashBookHomeComponent implements OnInit {\r\n  cashBookList: CashBook[] = [];\r\n  constructor(private cashBookService: CashBookService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cashBookList = this.cashBookService.getCashBookList();\r\n    this.cashBookService.getCashBookListListener().subscribe(data => {\r\n       this.cashBookList = data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"100\" id=\"cash-book-div\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <table class=\"table\" id=\"income-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Date</th>\r\n          <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n          <th class=\"w-15 text-left\">Income</th>\r\n          <th class=\"w-15 text-left\">Expenditure</th>\r\n          <th class=\"w-5 text-right\">Cash</th>\r\n          <th class=\"w-5 text-right\">Bank</th>\r\n          <th class=\"w-5 text-right\">Cash Balance</th>\r\n          <th class=\"w-5 text-right\">Bank Balance</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of cashBookList; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.formatted_date}}</td>\r\n          <td class=\"text-left\">{{item.transaction_number}}</td>\r\n          <td class=\"text-left\">{{item.income}}</td>\r\n          <td class=\"text-left\">{{item.expenditure}}</td>\r\n          <td class=\"text-right\">{{item.cash | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.bank | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.cash_balance | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.bank_balance | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Book, ReportService} from '../../services/report.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith, switchMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-cash-book',\r\n  templateUrl: './cash-book.component.html',\r\n  styleUrls: ['./cash-book.component.scss']\r\n})\r\nexport class CashBookComponent implements OnInit {\r\n  constructor(private formBuilder: FormBuilder, private bookService: ReportService) { }\r\n\r\n  get book() {\r\n    return this.bookForm.get('book');\r\n  }\r\n  $allBooks: Observable<Book[]>;\r\n  $filteredBooks: Observable<Book[]>;\r\n  bookForm = new FormGroup({\r\n    book: new FormControl(null, [Validators.required])\r\n  });\r\n  // bookForm = this.formBuilder.group({\r\n  //   book: [null, Validators.required]\r\n  // });\r\n\r\n  ngOnInit(): void {\r\n    this.$allBooks = this.bookService.getAllBooks();\r\n    this.$filteredBooks = this.book.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        switchMap(value => this.filterBooks(value))\r\n      );\r\n  }\r\n\r\n  private filterBooks(value: string | Book) {\r\n    let filterValue = '';\r\n    if (value) {\r\n      filterValue = typeof value === 'string' ? value.toLowerCase() : value.name.toLowerCase();\r\n      return this.$allBooks.pipe(\r\n        map(books => books.filter(book => book.name.toLowerCase().includes(filterValue)))\r\n      );\r\n    } else {\r\n      return this.$allBooks;\r\n    }\r\n  }\r\n\r\n  displayFn(book?: Book): string | undefined {\r\n    return (book ? book.name : undefined);\r\n  }\r\n  onFormSubmit() {\r\n    this.bookService.saveBook(this.bookForm.value);\r\n    this.resetForm();\r\n  }\r\n  resetForm() {\r\n    this.bookForm.reset();\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh; background-color: #dddddd\">\r\n      <h3>Angular Material Select with Search</h3>\r\n      <form [formGroup]=\"bookForm\" (ngSubmit)=\"onFormSubmit()\" class=\"book-form\">\r\n        <mat-form-field class=\"select-book\">\r\n          <input type=\"text\" placeholder=\"Select a book\" matInput formControlName=\"book\" [matAutocomplete]=\"auto\">\r\n          <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n            <mat-option *ngFor=\"let book of $filteredBooks | async\" [value]=\"book\">\r\n              {{book.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"book.hasError('required')\">\r\n            Book required.\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n        <br/>\r\n        <button mat-raised-button>Submit</button>\r\n        <button mat-raised-button type=\"button\" (click)=\"resetForm()\">Reset</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"receive-right\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {User} from '../../models/user.model';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @Input() deviceXs: boolean;\r\n  userSub: Subscription;\r\n  isAuthenticated = false;\r\n  isOwner = false;\r\n  isManager = false;\r\n  isWorker = false;\r\n  router: Router;\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n      if (user){\r\n        this.isAuthenticated = user.isAuthenticated;\r\n        this.isOwner = user.isOwner;\r\n        this.isManager = user.isManager;\r\n        this.isWorker = user.isWorker;\r\n      }else{\r\n        this.isAuthenticated = false;\r\n        this.isManager = false;\r\n        this.isWorker = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  myStyle(){\r\n    // return {'background-color': '#e83d44'};\r\n    return {\r\n      // 'background-color': 'rgba(255,0,0,' + (10 / 100) + ')',\r\n      'background-color': 'rgba(147,112,219,.3)',\r\n      color : 'white'\r\n    };\r\n  }\r\n}\r\n","<div class=\"navbar\">\r\n  <!--For Public-->\r\n  <mat-toolbar [ngStyle]=\"myStyle()\" *ngIf=\"!isAuthenticated\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n        <button mat-button >\r\n          <mat-icon>home</mat-icon>\r\n          <span class=\"logo\">Accounts</span>\r\n        </button>\r\n        <div *ngIf=\"!deviceXs\">\r\n          <button mat-button\r\n                  [routerLink]=\"['/']\"\r\n                  routerLinkActive=\"MyActiveMenu\"\r\n                  [routerLinkActiveOptions]=\"{exact: true}\">Home</button>\r\n          <button mat-button >Contact Us</button>\r\n          <button mat-button >About Us</button>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <button mat-button mat-raised-button\r\n              [routerLink]=\"['/auth']\"\r\n              routerLinkActive=\"MyActiveMenu\">Login</button>\r\n      <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <!--For Owner-->\r\n  <mat-toolbar [ngStyle]=\"myStyle()\" *ngIf=\"isAuthenticated && isOwner\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n          <button mat-button >\r\n            <mat-icon>home</mat-icon>\r\n            <span class=\"logo\">Accounts</span>\r\n          </button>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuLedger\">Master</button>\r\n          <mat-menu #menuLedger=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/ledger']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Ledger</button>\r\n          </mat-menu>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuTransaction\"><mat-icon>add</mat-icon>Transaction</button>\r\n          <mat-menu #menuTransaction=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/receive']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Receive</button>\r\n            <button mat-menu-item [routerLink]=\"['/payment']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Payment</button>\r\n          </mat-menu>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuReport\"><mat-icon>add</mat-icon>Report</button>\r\n          <mat-menu #menuReport=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/transactions']\" routerLinkActive=\"MyActiveMenu\">Transactions</button>\r\n            <button mat-menu-item [routerLink]=\"['/incomeAndExpenditure']\" routerLinkActive=\"MyActiveMenu\">Income & Expenditure</button>\r\n            <button mat-menu-item [routerLink]=\"['/cashBook']\" routerLinkActive=\"MyActiveMenu\">Cash Book</button>\r\n          </mat-menu>\r\n      </div>\r\n      <button mat-button mat-raised-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <!--For Manager-->\r\n  <mat-toolbar color=\"accent\" *ngIf=\"isAuthenticated && isWorker\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n          <button mat-button >\r\n            <mat-icon>home</mat-icon>\r\n            <span class=\"logo\">Coder</span>\r\n          </button>\r\n          <div *ngIf=\"!deviceXs\">\r\n            <button mat-button\r\n                    [routerLink]=\"['/']\"\r\n                    routerLinkActive=\"MyActiveMenu\"\r\n                    [routerLinkActiveOptions]=\"{exact: true}\">Home</button>\r\n            <button mat-button >Contact Us</button>\r\n            <button mat-button >About Us</button>\r\n          </div>\r\n          <div ngbDropdown class=\"d-inline-block\">\r\n            <button class=\"btn btn-outline-primary\" id=\"dropdownBasic3\" ngbDropdownToggle>Toggle dropdown</button>\r\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n              <button ngbDropdownItem>Action - 1</button>\r\n              <button ngbDropdownItem>Another Action</button>\r\n              <button ngbDropdownItem>Something else is here</button>\r\n            </div>\r\n          </div>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/customer']\" routerLinkActive=\"MyActiveMenu\">Customer</button>\r\n            <button mat-menu-item [routerLink]=\"['/product']\" routerLinkActive=\"MyActiveMenu\">Product</button>\r\n          </mat-menu>\r\n\r\n\r\n      </div>\r\n      <button mat-button\r\n              [routerLink]=\"['/auth']\"\r\n              routerLinkActive=\"MyActiveMenu\">Login</button>\r\n      <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n      <div>\r\n          <button  mat-button>\r\n            <mat-icon *ngIf=\"deviceXs\">more_vert</mat-icon>\r\n            <span *ngIf=\"!deviceXs\">Menu</span>\r\n          </button>\r\n      </div>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  products: any = [];\r\n\r\n  centered = false;\r\n  disabled = false;\r\n  unbounded = false;\r\n\r\n  radius: number;\r\n  color: string;\r\n  images = [1, 2, 3, 4, 5, 6].map((n) => `assets/carousel/carousel_${n}.jpg`);\r\n  videoUrl = 'https://www.youtube.com/embed/_8kT9xbq5Vk';\r\n  public safeURL: SafeResourceUrl;\r\n  constructor(private httpClient: HttpClient, private _sanitizer: DomSanitizer) {\r\n    this.safeURL = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoUrl);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.httpClient.get('assets/data.json').subscribe(data => {\r\n      console.log(data);\r\n      this.products = data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"10\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n  </div>\r\n  <div fxFlex=\"50\" >\r\n    <div style=\"min-height: 92vh; background-color: rgba(232,177,40,0.81);\">\r\n      <app-picture-carousel></app-picture-carousel>\r\n      <iframe [src]='safeURL' width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen></iframe>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-picture-carousel',\r\n  templateUrl: './picture-carousel.component.html',\r\n  styleUrls: ['./picture-carousel.component.scss']\r\n})\r\nexport class PictureCarouselComponent {\r\n  images = [1, 2, 3, 4].map((n) => `assets/carousel/carousel_${n}.jpg`);\r\n  pictureDetails: string[] = ['Beautiful Paro', 'I love nature', 'India is great', 'Stay at Home'];\r\n  paused = false;\r\n  unpauseOnArrow = false;\r\n  pauseOnIndicator = false;\r\n  pauseOnHover = true;\r\n\r\n  @ViewChild('carousel', {static : true}) carousel: NgbCarousel;\r\n\r\n  togglePaused() {\r\n    if (this.paused) {\r\n      this.carousel.cycle();\r\n    } else {\r\n      this.carousel.pause();\r\n    }\r\n    this.paused = !this.paused;\r\n  }\r\n\r\n  onSlide(slideEvent: NgbSlideEvent) {\r\n    if (this.unpauseOnArrow && slideEvent.paused &&\r\n      (slideEvent.source === NgbSlideEventSource.ARROW_LEFT || slideEvent.source === NgbSlideEventSource.ARROW_RIGHT)) {\r\n      this.togglePaused();\r\n    }\r\n    if (this.pauseOnIndicator && !slideEvent.paused && slideEvent.source === NgbSlideEventSource.INDICATOR) {\r\n      this.togglePaused();\r\n    }\r\n  }\r\n\r\n}\r\n","<ngb-carousel #carousel [interval]=\"1000\" [pauseOnHover]=\"pauseOnHover\" (slide)=\"onSlide($event)\">\r\n  <ng-template ngbSlide *ngFor=\"let img of images; index as i\">\r\n    <div class=\"carousel-caption\">\r\n<!--      <h3>My slide {{i + 1}} title</h3>-->\r\n      <h3>{{pictureDetails[i]}} title</h3>\r\n    </div>\r\n    <a href=\"https://www.google.fr/?q=Number+{{i+1}}\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\r\n      <div class=\"picsum-img-wrapper\">\r\n        <img [src]=\"img\" alt=\"My image {{i + 1}} description\">\r\n      </div>\r\n    </a>\r\n  </ng-template>\r\n</ngb-carousel>\r\n\r\n<hr>\r\n\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"pauseOnHover\" [(ngModel)]=\"pauseOnHover\">\r\n  <label class=\"form-check-label\" for=\"pauseOnHover\">Pause on hover</label>\r\n</div>\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"unpauseOnArrow\" [(ngModel)]=\"unpauseOnArrow\">\r\n  <label class=\"form-check-label\" for=\"unpauseOnArrow\">Unpause when clicking on arrows</label>\r\n</div>\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"pauseOnIndicator\" [(ngModel)]=\"pauseOnIndicator\">\r\n  <label class=\"form-check-label\" for=\"pauseOnIndicator\">Pause when clicking on navigation indicator</label>\r\n</div>\r\n<button type=\"button\" (click)=\"togglePaused()\" class=\"btn btn-outline-dark btn-sm\" placement=\"top\" ngbTooltip=\"Click here to pause\">\r\n  {{paused ? 'Cycle' : 'Pause' }}\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ReportService} from '../../../services/report.service';\r\nexport interface IncomeAndExpenditure {\r\n  ledger_id: number;\r\n  ledger_name: string;\r\n  amount: number;\r\n}\r\n@Component({\r\n  selector: 'app-income-expenditure-by-month',\r\n  templateUrl: './income-expenditure-by-month.component.html',\r\n  styleUrls: ['./income-expenditure-by-month.component.scss']\r\n})\r\nexport class IncomeExpenditureByMonthComponent implements OnInit {\r\n  searchMonth: number;\r\n  private sub: any;\r\n  searchYear: number;\r\n  incomeList: IncomeAndExpenditure[];\r\n  expenditureList: IncomeAndExpenditure[];\r\n  incomeTotal = 0;\r\n  expenditureTotal = 0;\r\n  surplus = -1;\r\n  months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n  deficit = -1;\r\n  constructor(private route: ActivatedRoute, private reportService: ReportService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.searchMonth = +params.month; // (+) converts string 'month' to a number\r\n      this.searchYear = +params.year; // (+) converts string 'year' to a number\r\n      // @ts-ignore\r\n      this.reportService.getIncomeGroupTotalListByYearAndMonth(this.searchYear, this.searchMonth).subscribe(response => {\r\n          this.incomeList = response.data;\r\n          this.incomeTotal = this.incomeList.reduce( (total, record) => {\r\n              // @ts-ignore\r\n              return total +  record.amount;\r\n          }, 0);\r\n          if (this.incomeTotal >= this.expenditureTotal){\r\n            this.surplus = this.incomeTotal - this.expenditureTotal;\r\n            this.deficit = -1;\r\n          }else{\r\n            this.deficit = this.expenditureTotal - this.incomeTotal;\r\n            this.surplus = -1;\r\n          }\r\n      });\r\n      this.reportService.getExpenditureGroupTotalListByYearAndMonth(this.searchYear, this.searchMonth).subscribe(response => {\r\n        this.expenditureList = response.data;\r\n        this.expenditureTotal = this.expenditureList.reduce( (total, record) => {\r\n          // @ts-ignore\r\n          return total +  record.amount;\r\n        }, 0);\r\n        if (this.incomeTotal >= this.expenditureTotal){\r\n          this.surplus = this.incomeTotal - this.expenditureTotal;\r\n          this.deficit = -1;\r\n        }else{\r\n          this.deficit = this.expenditureTotal - this.incomeTotal;\r\n          this.surplus = -1;\r\n        }\r\n      });\r\n      // In a real app: dispatch action to load the details here.\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"column\">\r\n  <h1 fxFlex=\"100\">Income and Expenditure</h1>\r\n  <h3 fxFlex=\"100\">Income and Expenditure for the month of {{months[searchMonth]}}, {{searchYear}}</h3>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"50\" id=\"expenditure-left\">\r\n    <div style=\"min-height: 30vh;\">\r\n      <table class=\"table\" id=\"expenditure-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-70 text-left\">Expenditures</th>\r\n          <th class=\"w-30 text-right\">amount</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of expenditureList\">\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n          <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"50\" id=\"income-right\">\r\n    <div style=\"min-height: 30vh;\">\r\n      <table class=\"table\" id=\"income-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-70 text-left\">Incomes</th>\r\n          <th class=\"w-30 text-right\">amount</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of incomeList\">\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n          <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"40\">\r\n    <span class=\"pl-5\" *ngIf=\"surplus>0\">Surplus: Income over Expenditure</span>\r\n  </div>\r\n  <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\r\n    <span class=\"surplus\" *ngIf=\"surplus>0\">{{surplus | currency:\"&#8377;\"}}</span>\r\n  </div>\r\n  <div fxFlex=\"40\">\r\n    <span class=\"pl-5\"  *ngIf=\"surplus<=0\">Deficit: Expenditure over Income</span>\r\n  </div>\r\n  <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\r\n    <span class=\"surplus\" *ngIf=\"surplus<0\">{{deficit | currency:\"&#8377;\"}}</span>\r\n  </div>\r\n</div>\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"40\">\r\n  </div>\r\n  <div fxFlex=\"10\" class=\"total-div\">\r\n    {{(expenditureTotal>incomeTotal ? expenditureTotal : incomeTotal) | currency:\"&#8377;\"}}\r\n  </div>\r\n  <div fxFlex=\"40\">\r\n  </div>\r\n  <div fxFlex=\"10\" class=\"total-div\">\r\n      {{(expenditureTotal>incomeTotal ? expenditureTotal : incomeTotal)  | currency:\"&#8377;\"}}\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure-by-year',\r\n  templateUrl: './income-expenditure-by-year.component.html',\r\n  styleUrls: ['./income-expenditure-by-year.component.scss']\r\n})\r\nexport class IncomeExpenditureByYearComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<p>income-expenditure-by-year works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure-home',\r\n  templateUrl: './income-expenditure-home.component.html',\r\n  styleUrls: ['./income-expenditure-home.component.scss']\r\n})\r\nexport class IncomeExpenditureHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>income-expenditure-home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ReportService} from '../../services/report.service';\r\nimport {TransactionYear} from '../../models/transaction-year.model';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {MatSelectChange} from '@angular/material/select';\r\nexport interface TransactionMonth {\r\n  month_number: number;\r\n  month_name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure',\r\n  templateUrl: './income-expenditure.component.html',\r\n  styleUrls: ['./income-expenditure.component.scss']\r\n})\r\nexport class IncomeExpenditureComponent implements OnInit {\r\n\r\n  transactionYears: TransactionYear[] = [];\r\n  transactionMonths: TransactionMonth[] = [];\r\n  reportSearchForm: FormGroup;\r\n  constructor(private reportService: ReportService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.transactionYears = this.reportService.getTransactionYears();\r\n    this.reportService.getTransactionYearsUpdateListener().subscribe((data: TransactionYear[]) => {\r\n      this.transactionYears = data;\r\n    });\r\n\r\n    this.reportSearchForm = this.reportService.reportSearchForm;\r\n\r\n\r\n  }// end of ngOnIt\r\n\r\n  selectMonthByYear($event: MatSelectChange) {\r\n    const index = this.transactionYears.findIndex(x => x.transaction_year === $event.value);\r\n    this.transactionMonths = this.transactionYears[index].months;\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\" *ngIf=\"transactionYears\">\r\n      <div class=\"form-container mt-5\" >\r\n        <form [formGroup] = reportSearchForm>\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Year</mat-label>\r\n                <mat-select (selectionChange)=\"selectMonthByYear($event)\"  formControlName=\"search_year\">\r\n                  <mat-option *ngFor=\"let year of transactionYears\" [value]=\"year.transaction_year\">\r\n                    {{year.transaction_year}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Month</mat-label>\r\n                <mat-select formControlName=\"search_month\">\r\n                  <mat-option *ngFor=\"let month of transactionMonths\" [value]=\"month.month_number\">\r\n                    {{month.month_name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n          <button mat-button [routerLink]=\"['incomeAndExpenditureByYear',reportSearchForm.value.search_year]\" [disabled]=\"!reportSearchForm.value.search_year\"   mat-stroked-button>\r\n            Income and Expenditure by Year\r\n          </button>\r\n\r\n          <button mat-button [routerLink]=\"['incomeAndExpenditureByMonth',reportSearchForm.value.search_year,reportSearchForm.value.search_month]\" [disabled]=\"!reportSearchForm.value.search_month\"   mat-stroked-button>\r\n            Income and Expenditure by Month\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"receive-right\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"false\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       transactionYears = {{transactionYears | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {LedgerService} from '../../services/ledger.service';\r\nimport {Ledger} from \"../../models/ledger.model\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-ledger',\r\n  templateUrl: './ledger.component.html',\r\n  styleUrls: ['./ledger.component.scss']\r\n})\r\nexport class LedgerComponent implements OnInit {\r\n  ledgerForm: FormGroup;\r\n  ledgerTypes = [\r\n    { id: 1, ledger_type_name: 'Income' },\r\n    { id: 2, ledger_type_name: 'Expenditure' }\r\n  ];\r\n  expenditureLedgers: Ledger[];\r\n  incomeLedgers: Ledger[];\r\n  constructor(private ledgerService: LedgerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ledgerForm = this.ledgerService.ledgerForm;\r\n    this.incomeLedgers = this.ledgerService.getIncomeLedgers();\r\n    this.ledgerService.getIncomeLedgersUpdateListener().subscribe(data => {\r\n      this.incomeLedgers = data;\r\n    });\r\n\r\n    this.expenditureLedgers = this.ledgerService.getExpenditureLedgers();\r\n    this.ledgerService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n      this.expenditureLedgers = data;\r\n    });\r\n    // this.ledgerService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n    //   this.expenditureLedgers = data;\r\n    // });\r\n  }\r\n\r\n  saveLedger() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.ledgerService.saveLedger(this.ledgerForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Ledger saved',\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n            }).then(r => {\r\n              this.ledgerForm.patchValue({ledger_name: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"left-div\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <div class=\"form-container mt-5\" >\r\n        <form [formGroup] = ledgerForm>\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Type</mat-label>\r\n                <mat-select   formControlName=\"ledger_type_id\">\r\n                  <mat-option *ngFor=\"let item of ledgerTypes\" [value]=\"item.id\">\r\n                    {{item.ledger_type_name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"90\" class=\"mr-2\">\r\n                <mat-label>Ledger Name</mat-label>\r\n                <input matInput placeholder=\"Ledger Name\" formControlName=\"ledger_name\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n          <button mat-button  mat-stroked-button (click)=\"saveLedger()\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"right-div\">\r\n    <div fxFlex=\"50\" id=\"right-left-div\">\r\n      <h1>Expenditures</h1>\r\n      <table class=\"table\" id=\"expenditure-ledger-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Ledger</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of expenditureLedgers ; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n    <div fxFlex=\"50\" id=\"right-right-div\">\r\n      <h1>Incomes</h1>\r\n      <table class=\"table\" id=\"income-ledger-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Ledger</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of incomeLedgers ; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-owner',\r\n  templateUrl: './owner.component.html',\r\n  styleUrls: ['./owner.component.scss']\r\n})\r\nexport class OwnerComponent implements OnInit {\r\n    arr = [\r\n      { value: 'abc', checked: true },\r\n      { value: 'xyz', checked: false },\r\n      { value: 'lmn', checked: true }\r\n    ];\r\n\r\n\r\n  constructor() {\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const filtered = this.arr.reduce((a, o) => (o.checked && a.push(o.value), a), []);\r\n\r\n    // const result = this.arr.filter(res => res.checked).map(ele => ele.value);\r\n\r\n    const result = this.arr.filter(({ checked }) => checked).map(({ value }) => value);\r\n    console.log(result);\r\n\r\n\r\n    const pilots = [\r\n      {\r\n        id: 40,\r\n        name: 'Poe Dameron',\r\n        years: 30,\r\n        faction: 'Empire',\r\n      },\r\n      {\r\n        id: 10,\r\n        name: 'Poe Dameron',\r\n        years: 14,\r\n        faction: 'Rebels',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Temmin \\'Snap\\' Wexley',\r\n        years: 30,\r\n        faction: 'Empire',\r\n      },\r\n      {\r\n        id: 41,\r\n        name: 'Tallissan Lintra',\r\n        years: 16,\r\n        faction: 'Rebels',\r\n      },\r\n      {\r\n        id: 99,\r\n        name: 'Ello Asty',\r\n        years: 22,\r\n        faction: 'Empire',\r\n      }\r\n    ];\r\n\r\n    const totalYears = pilots.reduce((accumulator, pilot) => accumulator + pilot.years, 0);\r\n    console.log(totalYears);\r\n\r\n    let empire = pilots.filter((pilot) => pilot.faction === 'Empire' && pilot.years === 30);\r\n\r\n    empire = pilots.filter((pilot) => [22, 30].includes(pilot.years));\r\n    console.log(empire);\r\n\r\n    const objArray = [ { foo: 1, bar: 2, baz: 9}, { foo: 3, bar: 4, baz: 10}, { foo: 5, bar: 6, baz: 20} ];\r\n\r\n    const result2 = objArray.map(({ foo, baz }) => ({ foo, baz }));\r\n\r\n\r\n    console.log(result2);\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"10\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n  </div>\r\n  <div fxFlex=\"50\" >\r\n    <div style=\"min-height: 92vh; background-color: rgba(3,2,12,0.81);\"></div>\r\n  </div>\r\n  <div fxFlex=\"60\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Ledger} from '../../models/ledger.model';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {Asset} from '../../models/asset.model';\r\nimport {Transaction} from '../../models/transaction.model';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\r\nimport {formatDate} from '@angular/common';\r\nimport Swal from 'sweetalert2';\r\nimport {AssetService} from '../../services/asset.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  expenditureLedgers: Ledger[] = [];\r\n  assets: Asset[] = [];\r\n  expenditureTransactions: Transaction[] = [];\r\n\r\n  transactionForm: FormGroup;\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n  constructor(private paymentService: PaymentService, private asstService: AssetService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.expenditureLedgers = this.paymentService.getExpenditureLedgers();\r\n    this.paymentService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n      this.expenditureLedgers = data;\r\n    });\r\n    this.transactionForm = this.paymentService.transactionForm;\r\n\r\n    // assets\r\n    this.assets = this.asstService.getAssets();\r\n    this.asstService.getAssetsUpdateListener().subscribe((data: Asset[]) => {\r\n      this.assets = data;\r\n    });\r\n\r\n    this.paymentService.expenditureTransactionSubject.subscribe(data => {\r\n      this.expenditureTransactions = data;\r\n    });\r\n    this.expenditureTransactions = this.paymentService.getTransactionDetails();\r\n\r\n  } // end of ngonit\r\n\r\n  handleTransactionDateChange($event: MatDatepickerInputEvent<unknown>) {\r\n    let val = this.transactionForm.value.transaction_date;\r\n    val = formatDate(val, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val});\r\n  }\r\n\r\n  saveExpenditureTransaction() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.paymentService.saveExpenditureTransaction(this.transactionForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Expenditure saved',\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            }).then(r => {\r\n              this.transactionForm.patchValue({ledger_id: null, asset_id: 1, amount: 0, particulars: null, voucher_number: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n\r\n  clearTransactionForm() {\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val, ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"40\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"income-form\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n              Expenditure Entry\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-container\">\r\n          <form [formGroup] = transactionForm>\r\n            <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <!--Transaction Date and Transaction Number-->\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <!--Transaction Date-->\r\n                <mat-form-field class=\"example-full-width\" fxFlex=\"40\">\r\n                  <mat-label>Choose a date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"handleTransactionDateChange($event)\" formControlName=\"transaction_date\" >\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker ></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Expenditure</mat-label>\r\n                  <mat-select  formControlName=\"ledger_id\">\r\n                    <mat-option *ngFor=\"let ledger of expenditureLedgers\" [value]=\"ledger.id\">\r\n                      {{ledger.ledger_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Voucher Number</mat-label>\r\n                  <input matInput placeholder=\"Voucher Number\" formControlName=\"voucher_number\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Transaction Through</mat-label>\r\n                  <mat-select  formControlName=\"asset_id\">\r\n                    <mat-option *ngFor=\"let asset of assets\" [value]=\"asset.id\">\r\n                      {{asset.assets_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Amount</mat-label>\r\n                  <input matInput type=\"number\" placeholder=\"Invoice\" (click)=\"$event.target.select()\" formControlName=\"amount\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Particulars</mat-label>\r\n                  <textarea  matInput rows=\"4\" cols=\"50\" formControlName=\"particulars\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </form>\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n            <button mat-button (click) = \"clearTransactionForm()\"   mat-stroked-button>Clear</button>\r\n            <button mat-button (click)=\"saveExpenditureTransaction()\" [disabled]=\"!transactionForm.valid\"   mat-stroked-button>Save</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" id=\"receive-right\">\r\n    <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of expenditureTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n<!--      transactionMasterForm={{this.transactionForm.valid | json}}-->\r\n<!--      transactionMasterForm={{this.transactionForm.value | json}}-->\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       transactionForm = {{transactionForm.value | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ReceiveService} from '../../services/receive.service';\r\nimport {Ledger} from '../../models/ledger.model';\r\nimport {AssetService} from '../../services/asset.service';\r\nimport {Asset} from '../../models/asset.model';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\r\nimport {formatDate} from '@angular/common';\r\nimport Swal from 'sweetalert2';\r\nimport {Transaction} from '../../models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'app-receive',\r\n  templateUrl: './receive.component.html',\r\n  styleUrls: ['./receive.component.scss']\r\n})\r\nexport class ReceiveComponent implements OnInit {\r\n  incomeLedgers: Ledger[] = [];\r\n  assets: Asset[] = [];\r\n  incomeTransactions: Transaction[] = [];\r\n\r\n  transactionForm: FormGroup\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n\r\n  constructor(private receiveService: ReceiveService, private asstService: AssetService) { }\r\n\r\n  ngOnInit(): void {\r\n  // incomeLedgers\r\n  this.incomeLedgers = this.receiveService.getIncomeLedgers();\r\n  this.receiveService.getIncomeLedgersUpdateListener().subscribe((data: Ledger[]) => {\r\n      this.incomeLedgers = data;\r\n    } );\r\n\r\n  // incomeTransactions\r\n  this.incomeTransactions = this.receiveService.getIncomeTransactions();\r\n  this.receiveService.getIncomeTransactionUpdateListener().subscribe((data: Transaction[]) => {\r\n    this.incomeTransactions = data;\r\n  });\r\n\r\n    // assets\r\n  this.assets = this.asstService.getAssets();\r\n  this.asstService.getAssetsUpdateListener().subscribe((data: Asset[]) => {\r\n      this.assets = data;\r\n    });\r\n\r\n    // setting form\r\n  this.transactionForm = this.receiveService.transactionForm;\r\n  this.transactionForm.patchValue({asset_id: 1});\r\n  }\r\n\r\n  handleTransactionDateChange($event: MatDatepickerInputEvent<unknown>) {\r\n    let val = this.transactionForm.value.transaction_date;\r\n    val = formatDate(val, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val});\r\n  }\r\n\r\n  saveIncomeTransaction() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.receiveService.saveIncomeTransaction(this.transactionForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Sale saved',\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n            }).then(r => {\r\n              this.transactionForm.patchValue({ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n\r\n  clearTransactionForm() {\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val, ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"40\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"income-form\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n              Income Entry\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-container\">\r\n          <form [formGroup] = transactionForm>\r\n            <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <!--Transaction Date and Transaction Number-->\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <!--Transaction Date-->\r\n                <mat-form-field class=\"example-full-width\" fxFlex=\"40\">\r\n                  <mat-label>Choose a date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"handleTransactionDateChange($event)\" formControlName=\"transaction_date\" >\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker ></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Income</mat-label>\r\n                  <mat-select  formControlName=\"ledger_id\">\r\n                    <mat-option *ngFor=\"let ledger of incomeLedgers\" [value]=\"ledger.id\">\r\n                      {{ledger.ledger_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Voucher Number</mat-label>\r\n                  <input matInput placeholder=\"Voucher Number\" formControlName=\"voucher_number\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Transaction Through</mat-label>\r\n                  <mat-select  formControlName=\"asset_id\">\r\n                    <mat-option *ngFor=\"let asset of assets\" [value]=\"asset.id\">\r\n                      {{asset.assets_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Amount</mat-label>\r\n                    <input matInput placeholder=\"Invoice\" (click)=\"$event.target.select()\" formControlName=\"amount\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Particulars</mat-label>\r\n                  <textarea  matInput rows=\"4\" cols=\"50\" formControlName=\"particulars\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </form>\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n            <button mat-button (click) = \"clearTransactionForm()\"   mat-stroked-button>Clear</button>\r\n            <button mat-button (click)=\"saveIncomeTransaction()\" [disabled]=\"!transactionForm.valid\"   mat-stroked-button>Save</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" id=\"receive-right\">\r\n    <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let item of incomeTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n              <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n              <td class=\"text-left\">{{item.formatted_date}}</td>\r\n              <td class=\"text-left\">{{item.transaction_number}}</td>\r\n              <td class=\"text-left\">{{item.ledger_name}}</td>\r\n              <td class=\"text-left\">{{item.assets_name}}</td>\r\n              <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n      transactionMasterForm={{this.transactionForm.valid | json}}\r\n      transactionMasterForm={{this.transactionForm.value | json}}\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       incomeTransactions = {{incomeTransactions | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {Transaction} from '../../models/transaction.model';\r\nimport {ReceiveService} from \"../../services/receive.service\";\r\n\r\n@Component({\r\n  selector: 'app-transaction-report',\r\n  templateUrl: './transaction-report.component.html',\r\n  styleUrls: ['./transaction-report.component.scss']\r\n})\r\nexport class TransactionReportComponent implements OnInit {\r\n  expenditureTransactions: Transaction[] = [];\r\n  incomeTransactions: Transaction[] = [];\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n  constructor(private paymentService: PaymentService, private receiveService: ReceiveService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.expenditureTransactions = this.paymentService.getTransactionDetails();\r\n    this.paymentService.getTransactionsUpdateListener().subscribe(data => {\r\n      this.expenditureTransactions = data;\r\n    });\r\n\r\n    this.incomeTransactions = this.receiveService.getIncomeTransactions();\r\n    this.receiveService.getIncomeTransactionUpdateListener().subscribe(data => {\r\n      this.incomeTransactions = data;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"50\" id=\"expenditure-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n        <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Expenditure Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"expenditure-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of expenditureTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'2.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"expenditure_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"50\" id=\"expenditure-right\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-right-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of incomeTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'2.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n      expenditureTransactions = {{expenditureTransactions | json}}\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n        incomeTransactions = {{incomeTransactions | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {Asset} from '../models/asset.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class AssetService {\r\n  assets: Asset[] = [];\r\n  assetsSubject = new Subject<Asset[]>();\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/assets')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Asset[]}) => {\r\n        const {data} = response;\r\n        this.assets = data;\r\n        this.assetsSubject.next([...this.assets]);\r\n      })).subscribe();\r\n  }\r\n\r\n  getAssetsUpdateListener(){\r\n    return this.assetsSubject.asObservable();\r\n  }\r\n\r\n  getAssets(){\r\n    return [...this.assets];\r\n  }\r\n\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {User} from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate{\r\n  userSub: Subscription;\r\n  constructor(private authService: AuthService) { }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\r\n    : Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HttpParams, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport {Observable, of, throwError} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {take, exhaustMap, catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorInterceptor implements HttpInterceptor {\r\n  userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  private handleAuthError(err: HttpErrorResponse): Observable<any> {\r\n    // handle your auth error or rethrow\r\n    if (err.status === 401 || err.status === 403) {\r\n      // navigate /delete cookies or whatever\r\n      // this.router.navigateByUrl('/auth');\r\n      this.authService.logout();\r\n      // localStorage.removeItem('user');\r\n      // this.router.navigate(['/auth']);\r\n\r\n      // tslint:disable-next-line:max-line-length\r\n      // if you've caught / handled the error, you don't want to rethrow it unless you also want downstream consumers to have to handle it as well.\r\n      return of(err.message); // or EMPTY may be appropriate here\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n\r\n    if (localStorage.getItem('user')){\r\n      this.userData = JSON.parse(localStorage.getItem('user'));\r\n    }else{\r\n      this.userData = {id: 0, personName: 'No Person', _authKey: 'no key', personTypeId: 0};\r\n    }\r\n\r\n    console.log('intercepted request ... ');\r\n\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + this.userData._authKey) });\r\n\r\n    console.log('Sending request with new header now ...');\r\n\r\n    // send the newly created request\r\n    return next.handle(authReq).pipe(catchError(x => this.handleAuthError(x)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {BehaviorSubject, Subject, throwError} from 'rxjs';\r\nimport {User} from '../models/user.model';\r\nimport {Router} from '@angular/router';\r\n// global.ts file is created in shared folder to store all global variables.\r\nimport {GlobalVariable} from '../shared/global';\r\n\r\nexport interface AuthResponseData {\r\n  success: number;\r\n  token: {headers: object, original: {access_token: string, token_type: string, expires_in: number}, exception: object };\r\n  user: {id: number, person_name: string,  person_type_id: number};\r\n  message: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user = new BehaviorSubject<User>(null);\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n  isAuthenticated(){\r\n\r\n    if (this.user.value){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  autoLogin(){\r\n    const userData: {id: number, personName: string, _authKey: string, personTypeId: number} = JSON.parse(localStorage.getItem('user'));\r\n    if (!userData){\r\n      return;\r\n    }\r\n    const loadedUser = new User(userData.id, userData.personName, userData._authKey, userData.personTypeId);\r\n    if (loadedUser.authKey){\r\n      this.user.next(loadedUser);\r\n      //  if (loadedUser.isOwner){\r\n      //   this.router.navigate(['/owner']);\r\n      // }\r\n    }\r\n  }\r\n  login(loginData){\r\n    return this.http.post<AuthResponseData>(GlobalVariable.BASE_API_URL + '/login', loginData)\r\n      .pipe(catchError(this.handleError), tap(resData => {\r\n        // tslint:disable-next-line:max-line-length\r\n        if (resData.success === 1){\r\n            const user = new User(resData.user.id,\r\n              resData.user.person_name,\r\n              resData.token.original.access_token,\r\n              resData.user.person_type_id);\r\n            this.user.next(user); // here two user is used one is user and another user is subject of rxjs\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n          }\r\n      }));  // this.handleError is a method created by me\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    return throwError(errorResponse.error.message);\r\n  }\r\n\r\n  logout(){\r\n    this.user.next(null);\r\n    localStorage.removeItem('user');\r\n    this.router.navigate(['/auth']);\r\n    location.reload();\r\n    this.router.navigate(['/auth']);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Subject, throwError} from \"rxjs\";\r\nimport {CashBookComponent} from \"../pages/cash-book/cash-book.component\";\r\nimport {CashBook} from \"../models/cash-book.model\";\r\nimport {GlobalVariable} from \"../shared/global\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {Ledger} from \"../models/ledger.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class CashBookService {\r\n  cashBookList: CashBook[] = [];\r\n  cashBookSubject = new Subject<CashBook[]>();\r\n  constructor(private http: HttpClient) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/cashBook')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: CashBook[]}) => {\r\n        const {data} = response;\r\n        this.cashBookList = data;\r\n        this.cashBookSubject.next([...this.cashBookList]);\r\n      })).subscribe();\r\n  } // end of constructor\r\n\r\n  getCashBookList(){\r\n    return [...this.cashBookList];\r\n  }\r\n  getCashBookListListener(){\r\n    return this.cashBookSubject.asObservable();\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {Transaction} from \"../models/transaction.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class LedgerService {\r\n  ledgerForm: FormGroup;\r\n  incomeLedgers: Ledger[] = [];\r\n  incomeLedgerSubject = new Subject<Ledger[]>();\r\n  expenditureLedgers: Ledger[] = [];\r\n  expenditureLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.incomeLedgers = data;\r\n        this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.expenditureLedgers = data;\r\n        this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n      })).subscribe();\r\n\r\n    this.ledgerForm = new FormGroup({\r\n      id: new FormControl(null, ),\r\n      ledger_type_id: new FormControl(null, [Validators.required]),\r\n      ledger_name: new FormControl(null, [Validators.required])\r\n    });\r\n  } // end of constructor\r\n\r\n  getIncomeLedgersUpdateListener(){\r\n    return this.incomeLedgerSubject.asObservable();\r\n  }\r\n\r\n  getIncomeLedgers(){\r\n    return [...this.incomeLedgers];\r\n  }\r\n\r\n  getExpenditureLedgersUpdateListener(){\r\n    return this.expenditureLedgerSubject.asObservable();\r\n  }\r\n\r\n  getExpenditureLedgers(){\r\n    return [...this.expenditureLedgers];\r\n  }\r\n\r\n  saveLedger(ledgerData) {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<{success: number, data: Ledger}>(GlobalVariable.BASE_API_URL + '/ledgers', ledgerData)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger}) => {\r\n        if ( response.data.ledger_type_id === 1) {\r\n          this.incomeLedgers.unshift( response.data);\r\n          this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n        }else{\r\n          this.expenditureLedgers.unshift( response.data);\r\n          this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n        }\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {Transaction} from '../models/transaction.model';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {formatDate} from '@angular/common';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class PaymentService {\r\n  expenditureLedgers: Ledger[] = [];\r\n  expenditureLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  expenditureTransactions: Transaction[] = [];\r\n  expenditureTransactionSubject = new Subject<Transaction[]>();\r\n  transactionForm: FormGroup;\r\n  private readonly userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    if (!this.userData){\r\n      return;\r\n    }\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.expenditureLedgers = data;\r\n        this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureTransactions')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction[]}) => {\r\n        const {data} = response;\r\n        this.expenditureTransactions = data;\r\n        this.expenditureTransactionSubject.next([...this.expenditureTransactions]);\r\n      })).subscribe();\r\n\r\n    // form creation\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      transaction_date: new FormControl(val, [Validators.required]),\r\n      ledger_id: new FormControl(null, [Validators.required]),\r\n      asset_id: new FormControl(1, [Validators.required]),           // purchase\r\n      voucher_number: new FormControl(null),\r\n      amount: new FormControl(0, [Validators.required]),\r\n      voucher_id: new FormControl(2, [Validators.required]),\r\n      particulars: new FormControl(null, [Validators.maxLength(255)]),\r\n      user_id: new FormControl(this.userData.id, [Validators.required])\r\n    });\r\n  }// end of constructor\r\n\r\n  getExpenditureLedgersUpdateListener(){\r\n    return this.expenditureLedgerSubject.asObservable();\r\n  }\r\n\r\n  getExpenditureLedgers(){\r\n    return [...this.expenditureLedgers];\r\n  }\r\n\r\n  getTransactionsUpdateListener(){\r\n    return this.expenditureTransactionSubject.asObservable();\r\n  }\r\n\r\n  getTransactionDetails(){\r\n    return [...this.expenditureTransactions];\r\n  }\r\n\r\n  saveExpenditureTransaction(transactionFormValue) {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<{success: number, data: Transaction}>(GlobalVariable.BASE_API_URL + '/expenditureTransactions', transactionFormValue)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction}) => {\r\n        this.expenditureTransactions.unshift( response.data);\r\n        this.expenditureTransactionSubject.next([...this.expenditureTransactions]);\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {formatDate} from '@angular/common';\r\nimport {Transaction} from '../models/transaction.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class ReceiveService {\r\n  incomeLedgers: Ledger[] = [];\r\n  incomeLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  incomeTransactions: Transaction[] = [];\r\n  incomeTransactionSubject = new Subject<Transaction[]>();\r\n\r\n  transactionForm: FormGroup;\r\n  private readonly userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    if (!this.userData){\r\n      return;\r\n    }else{\r\n      console.log(this.userData);\r\n    }\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.incomeLedgers = data;\r\n        this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeTransactions')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction[]}) => {\r\n        const {data} = response;\r\n        this.incomeTransactions = data;\r\n        this.incomeTransactionSubject.next([...this.incomeTransactions]);\r\n      })).subscribe();\r\n\r\n    // form creation\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      transaction_date: new FormControl(val, [Validators.required]),\r\n      ledger_id: new FormControl(null, [Validators.required]),\r\n      asset_id: new FormControl(1, [Validators.required]),           // purchase\r\n      voucher_number: new FormControl(null),\r\n      amount: new FormControl(0, [Validators.required]),\r\n      voucher_id: new FormControl(1, [Validators.required]),\r\n      particulars: new FormControl(null, [Validators.maxLength(255)]),\r\n      user_id: new FormControl(this.userData.id, [Validators.required])\r\n    });\r\n  }// end of constructor\r\n\r\n  getIncomeLedgersUpdateListener(){\r\n    return this.incomeLedgerSubject.asObservable();\r\n  }\r\n\r\n  getIncomeLedgers(){\r\n    return [...this.incomeLedgers];\r\n  }\r\n\r\n  getIncomeTransactionUpdateListener(){\r\n    return this.incomeTransactionSubject.asObservable();\r\n  }\r\n\r\n  getIncomeTransactions(){\r\n    return [...this.incomeTransactions];\r\n  }\r\n\r\n  saveIncomeTransaction(transactionFormValue){\r\n    return this.http.post<{success: number, data: Transaction}>(GlobalVariable.BASE_API_URL + '/incomeTransactions', transactionFormValue)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction}) => {\r\n          this.incomeTransactions.unshift( response.data);\r\n          this.incomeTransactionSubject.next([...this.incomeTransactions]);\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {of, Subject, throwError} from 'rxjs';\r\nimport {TransactionYear} from '../models/transaction-year.model';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\nimport {AuthService} from './auth.service';\r\nexport interface Book {\r\n  id: number;\r\n  name: string;\r\n  writer: string;\r\n}\r\n\r\nconst ALL_BOOKS: Book[] = [\r\n  { id: 101, name: 'Godaan', writer: 'Premchand' },\r\n  { id: 102, name: 'Karmabhoomi', writer: 'Premchand' },\r\n  { id: 103, name: 'Pinjar', writer: 'Amrita Pritam' },\r\n  { id: 104, name: 'Kore Kagaz', writer: 'Amrita Pritam' },\r\n  { id: 105, name: 'Nirmala', writer: 'Premchand' },\r\n  { id: 106, name: 'Seva Sadan', writer: 'Premchand' }\r\n];\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class ReportService {\r\n  transactionYears: TransactionYear[] = [];\r\n  transactionYearSubject = new Subject<TransactionYear[]>();\r\n  reportSearchForm: FormGroup;\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/transactionYears')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: TransactionYear[]}) => {\r\n        const {data} = response;\r\n        this.transactionYears = data;\r\n        this.transactionYearSubject.next([...this.transactionYears]);\r\n      })).subscribe();\r\n\r\n    this.reportSearchForm = new FormGroup({\r\n      search_year: new FormControl(null, [Validators.required]),\r\n      search_month: new FormControl(null)\r\n    });\r\n\r\n  }// end of constructor\r\n\r\n\r\n  getTransactionYears(){\r\n    return [...this.transactionYears];\r\n  }\r\n  getTransactionYearsUpdateListener(){\r\n    return this.transactionYearSubject.asObservable();\r\n  }\r\n\r\n\r\n  getIncomeGroupTotalListByYearAndMonth(year: number, month: number){\r\n    return this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgersTotal/' + year + '/' + month )\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: any}) => {\r\n          console.log(response);\r\n      }));\r\n  }\r\n  getExpenditureGroupTotalListByYearAndMonth(year: number, month: number){\r\n    return this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgersTotal/' + year + '/' + month )\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: any}) => {\r\n        console.log(response);\r\n      }));\r\n  }\r\n\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['auth']).then(r => {});\r\n      // location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n\r\n  getAllBooks() {\r\n    return of(ALL_BOOKS);\r\n  }\r\n  saveBook(books) {\r\n    console.log(JSON.stringify(books));\r\n  }\r\n\r\n}\r\n","import {backgroundColor} from \"html2canvas/dist/types/css/property-descriptors/background-color\";\r\nimport {fontFamily} from \"html2canvas/dist/types/css/property-descriptors/font-family\";\r\nimport {fontWeight} from \"html2canvas/dist/types/css/property-descriptors/font-weight\";\r\n\r\nexport const GlobalVariable = Object.freeze({\r\n  BASE_API_URL: 'http://127.0.0.1:8000/api',\r\n  // ... more of your variables\r\n});\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.scss']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-spinner\">\r\n  <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-ellipsis',\r\n  templateUrl: './loaidng-ellipsis.component.html',\r\n  styleUrls: ['./loaidng-ellipsis.component.scss']\r\n})\r\nexport class LoaidngEllipsisComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-hourglass',\r\n  templateUrl: './loaidng-hourglass.component.html',\r\n  styleUrls: ['./loaidng-hourglass.component.scss']\r\n})\r\nexport class LoaidngHourglassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-hourglass\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-ripple',\r\n  templateUrl: './loaidng-ripple.component.html',\r\n  styleUrls: ['./loaidng-ripple.component.scss']\r\n})\r\nexport class LoaidngRippleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ripple\"><div></div><div></div></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-roller',\r\n  templateUrl: './loaidng-roller.component.html',\r\n  styleUrls: ['./loaidng-roller.component.scss']\r\n})\r\nexport class LoaidngRollerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-roller\">\r\n  <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}