{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/confirmation-dialog/confirmation-dialog.component.ts","./src/app/common/confirmation-dialog/confirmation-dialog.component.html","./src/app/common/sncak-bar/sncak-bar.component.ts","./src/app/common/sncak-bar/sncak-bar.component.html","./src/app/core/material.module.ts","./src/app/date-format.ts","./src/app/models/user.model.ts","./src/app/pages/auth/auth.component.ts","./src/app/pages/auth/auth.component.html","./src/app/pages/cash-book/cash-book-home/cash-book-home.component.ts","./src/app/pages/cash-book/cash-book-home/cash-book-home.component.html","./src/app/pages/cash-book/cash-book.component.ts","./src/app/pages/cash-book/cash-book.component.html","./src/app/pages/header/header.component.ts","./src/app/pages/header/header.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/picture-carousel/picture-carousel.component.ts","./src/app/pages/home/picture-carousel/picture-carousel.component.html","./src/app/pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component.ts","./src/app/pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component.html","./src/app/pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component.ts","./src/app/pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component.html","./src/app/pages/income-expenditure/income-expenditure-home/income-expenditure-home.component.ts","./src/app/pages/income-expenditure/income-expenditure-home/income-expenditure-home.component.html","./src/app/pages/income-expenditure/income-expenditure.component.ts","./src/app/pages/income-expenditure/income-expenditure.component.html","./src/app/pages/ledger/ledger.component.ts","./src/app/pages/ledger/ledger.component.html","./src/app/pages/owner/owner.component.ts","./src/app/pages/owner/owner.component.html","./src/app/pages/payment/payment.component.ts","./src/app/pages/payment/payment.component.html","./src/app/pages/receive/receive.component.ts","./src/app/pages/receive/receive.component.html","./src/app/pages/transaction-report/transaction-report.component.ts","./src/app/pages/transaction-report/transaction-report.component.html","./src/app/services/asset.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth-interceptor.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/cash-book.service.ts","./src/app/services/ledger.service.ts","./src/app/services/payment.service.ts","./src/app/services/receive.service.ts","./src/app/services/report.service.ts","./src/app/shared/global.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/app/shared/loading-spinner/loading-spinner.component.html","./src/app/shared/loaidng-ellipsis/loaidng-ellipsis.component.ts","./src/app/shared/loaidng-ellipsis/loaidng-ellipsis.component.html","./src/app/shared/loaidng-hourglass/loaidng-hourglass.component.ts","./src/app/shared/loaidng-hourglass/loaidng-hourglass.component.html","./src/app/shared/loaidng-ripple/loaidng-ripple.component.ts","./src/app/shared/loaidng-ripple/loaidng-ripple.component.html","./src/app/shared/loaidng-roller/loaidng-roller.component.ts","./src/app/shared/loaidng-roller/loaidng-roller.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport {AuthComponent} from './pages/auth/auth.component';\r\nimport {AuthGuardService} from './services/auth-guard.service';\r\nimport {OwnerComponent} from './pages/owner/owner.component';\r\nimport {ReceiveComponent} from './pages/receive/receive.component';\r\nimport {PaymentComponent} from './pages/payment/payment.component';\r\nimport {TransactionReportComponent} from './pages/transaction-report/transaction-report.component';\r\nimport {IncomeExpenditureComponent} from './pages/income-expenditure/income-expenditure.component';\r\nimport {IncomeExpenditureHomeComponent} from './pages/income-expenditure/income-expenditure-home/income-expenditure-home.component';\r\nimport {IncomeExpenditureByYearComponent} from './pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component';\r\nimport {IncomeExpenditureByMonthComponent} from './pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component';\r\nimport {LedgerComponent} from './pages/ledger/ledger.component';\r\nimport {CashBookComponent} from \"./pages/cash-book/cash-book.component\";\r\nimport {CashBookHomeComponent} from \"./pages/cash-book/cash-book-home/cash-book-home.component\";\r\n\r\n\r\n// @ts-ignore\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'auth', component: AuthComponent},\r\n  {path: 'owner', canActivate:  [AuthGuardService], component: OwnerComponent},\r\n  {path: 'receive', canActivate:  [AuthGuardService], component: ReceiveComponent},\r\n  {path: 'payment', canActivate:  [AuthGuardService], component: PaymentComponent},\r\n  {path: 'ledger', canActivate:  [AuthGuardService], component: LedgerComponent},\r\n  {path: 'transactions', canActivate:  [AuthGuardService], component: TransactionReportComponent},\r\n  {path: 'incomeAndExpenditure', canActivate:  [AuthGuardService], component: IncomeExpenditureComponent,\r\n    children: [\r\n      {path: '', component: IncomeExpenditureHomeComponent, pathMatch: 'full'},\r\n      {path: 'incomeAndExpenditureByYear/:year', component: IncomeExpenditureByYearComponent},\r\n      {path: 'incomeAndExpenditureByMonth/:year/:month', component: IncomeExpenditureByMonthComponent},\r\n    ]\r\n  },\r\n  {path: 'cashBook', canActivate:  [AuthGuardService], component: CashBookComponent,\r\n    children: [\r\n      {path: '', component: CashBookHomeComponent, pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport { NgbButtonsModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBaby } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { Subscription } from 'rxjs';\r\nimport {AuthService} from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy{\r\n  title = 'base-project';\r\n  active = 1;\r\n  events: string[] = [];\r\n  opened: boolean;\r\n  faCoffee = faCoffee;\r\n  faBaby = faBaby;\r\n  mediaSub: Subscription;\r\n  deviceXs: boolean;\r\n  constructor(public mediaObserver: MediaObserver, private authService: AuthService){\r\n  }\r\n  ngOnInit(): void {\r\n      this.mediaSub = this.mediaObserver.media$.subscribe(\r\n        (result: MediaChange) => {\r\n          console.log(result.mqAlias);\r\n          this.deviceXs = (result.mqAlias === 'xs' ? true : false);\r\n        }\r\n      );\r\n\r\n      this.authService.autoLogin();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.mediaSub.unsubscribe();\r\n  }\r\n}\r\n","<!--<div fxLayout=\"column\" fxFlexFill>-->\r\n<!--  <app-header [deviceXs]=\"deviceXs\"></app-header>-->\r\n<!--  <div fxLayout=\"column\" fxFill>-->\r\n<!--    <div fxFlex=\"column grow\" style=\"margin: 0%\">-->\r\n<!--      <router-outlet></router-outlet>-->\r\n<!--    </div>-->\r\n<!--    <footer fxLayout=\"column\">-->\r\n<!--      <div fxLayout=\"row\">-->\r\n<!--        <hr fxFlex=\"100\">-->\r\n<!--      </div>-->\r\n<!--      <p fxFlexAlign=\"center\">Copy Right CODER</p>-->\r\n<!--    </footer>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">-->\r\n<!--  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\">-->\r\n<!--      <app-header [deviceXs]=\"deviceXs\"></app-header>-->\r\n<!--  </div>-->\r\n<!--  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\" style=\"margin-top: 70px\">-->\r\n<!--    <router-outlet></router-outlet>-->\r\n<!--  </div>-->\r\n\r\n\r\n<!--  <div fxFlex fxLayoutAlign=\"start end\" class=\"bottom-div\">-->\r\n<!--    BOTTOM ELEMENT: This div is filled and text is aligned in the end-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n\r\n<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">\r\n  <div fxFlex=\"1\" fxLayout=\"column\" flexLayoutAlign=\"center center\">\r\n    <app-header [deviceXs]=\"deviceXs\"></app-header>\r\n  </div>\r\n  <div fxFlex=\"1\"  fxLayout=\"column\" flexLayoutAlign=\"center center\"  style=\"margin-top: 70px; min-height: 80vh\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n\r\n  <div fxFlexFill fxLayoutAlign=\"start end\" class=\"bottom-div\" style=\"background-color: #2e2e2e\">\r\n    Receipt & Payment Account\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"space-between stretch\" class=\"bg-red\">-->\r\n<!--  <app-header [deviceXs]=\"deviceXs\" fxFlex=\"1\" fxLayout=\"col\" flexLayoutAlign=\"center center\"></app-header>-->\r\n\r\n<!--      <div fxFlex=\"column grow\">-->\r\n<!--        <router-outlet></router-outlet>-->\r\n<!--      </div>-->\r\n\r\n\r\n<!--  <div fxFlex fxLayoutAlign=\"start end\" class=\"bottom-div\">-->\r\n<!--    <footer fxLayout=\"column\">-->\r\n<!--      <div fxLayout=\"row\">-->\r\n<!--        <hr fxFlex=\"100\">-->\r\n<!--      </div>-->\r\n<!--      <p fxFlexAlign=\"center\">Copy Right CODER</p>-->\r\n<!--    </footer>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HeaderComponent } from './pages/header/header.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { MaterialModule } from './core/material.module';\r\n\r\n\r\n\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HomeComponent } from './pages/home/home.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { PictureCarouselComponent } from './pages/home/picture-carousel/picture-carousel.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport { AuthComponent } from './pages/auth/auth.component';\r\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\r\nimport {AuthInterceptorInterceptor} from './services/auth-interceptor.interceptor';\r\nimport { OwnerComponent } from './pages/owner/owner.component';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { SncakBarComponent } from './common/sncak-bar/sncak-bar.component';\r\nimport { ConfirmationDialogComponent } from './common/confirmation-dialog/confirmation-dialog.component';\r\nimport { LoaidngRippleComponent } from './shared/loaidng-ripple/loaidng-ripple.component';\r\nimport { LoaidngEllipsisComponent } from './shared/loaidng-ellipsis/loaidng-ellipsis.component';\r\nimport { LoaidngHourglassComponent } from './shared/loaidng-hourglass/loaidng-hourglass.component';\r\nimport { LoaidngRollerComponent } from './shared/loaidng-roller/loaidng-roller.component';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { DateFormat } from './date-format';\r\nimport { ReceiveComponent } from './pages/receive/receive.component';\r\nimport { PaymentComponent } from './pages/payment/payment.component';\r\nimport { TransactionReportComponent } from './pages/transaction-report/transaction-report.component';\r\nimport { IncomeExpenditureComponent } from './pages/income-expenditure/income-expenditure.component';\r\nimport { IncomeExpenditureHomeComponent } from './pages/income-expenditure/income-expenditure-home/income-expenditure-home.component';\r\nimport { IncomeExpenditureByYearComponent } from './pages/income-expenditure/income-expenditure-by-year/income-expenditure-by-year.component';\r\nimport { IncomeExpenditureByMonthComponent } from './pages/income-expenditure/income-expenditure-by-month/income-expenditure-by-month.component';\r\nimport { LedgerComponent } from './pages/ledger/ledger.component';\r\nimport { CashBookComponent } from './pages/cash-book/cash-book.component';\r\nimport { CashBookHomeComponent } from './pages/cash-book/cash-book-home/cash-book-home.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    PictureCarouselComponent,\r\n    AuthComponent,\r\n    LoadingSpinnerComponent,\r\n    OwnerComponent,\r\n    SncakBarComponent,\r\n    ConfirmationDialogComponent,\r\n    LoaidngRippleComponent,\r\n    LoaidngEllipsisComponent,\r\n    LoaidngHourglassComponent,\r\n    LoaidngRollerComponent,\r\n    ReceiveComponent,\r\n    PaymentComponent,\r\n    TransactionReportComponent,\r\n    IncomeExpenditureComponent,\r\n    IncomeExpenditureHomeComponent,\r\n    IncomeExpenditureByYearComponent,\r\n    IncomeExpenditureByMonthComponent,\r\n    LedgerComponent,\r\n    CashBookComponent,\r\n    CashBookHomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxPrintModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorInterceptor, multi: true},\r\n              {provide: DateAdapter, useClass: DateFormat} ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(private dateAdapter: DateAdapter<Date>) {\r\n    dateAdapter.setLocale('en-in'); // DD/MM/YYYY\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ title }}</h4>\r\n<!--  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">-->\r\n<!--    <span aria-hidden=\"true\"><mat-icon>cancel</mat-icon></span>-->\r\n<!--  </button>-->\r\n  <button mat-icon-button color=\"primary\" aria-label=\"Colose\" (click)=\"dismiss()\">\r\n    <mat-icon>cancel</mat-icon>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ message }}\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{ btnCancelText }}</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-update-sncak-bar',\r\n  templateUrl: './sncak-bar.component.html',\r\n  styleUrls: ['./sncak-bar.component.scss']\r\n})\r\nexport class SncakBarComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<span class=\"example-pizza-party\">\r\n  🟢 {{data.message}}\r\n</span>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\n\r\n\r\n\r\n// @ts-ignore\r\n@NgModule({\r\n  exports: [\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatNativeDateModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n","import {NativeDateAdapter} from '@angular/material/core';\r\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\r\n\r\nexport class DateFormat extends NativeDateAdapter {\r\n  useUtcForDisplay = true;\r\n  parse(value: any): Date | null {\r\n    if (typeof value === 'string' && value.indexOf('/') > -1) {\r\n      const str = value.split('/');\r\n      const year = Number(str[2]);\r\n      const month = Number(str[1]) - 1;\r\n      const date = Number(str[0]);\r\n      return new Date(year, month, date);\r\n    }\r\n    const timestamp = typeof value === 'number' ? value : Date.parse(value);\r\n    return isNaN(timestamp) ? null : new Date(timestamp);\r\n  }\r\n}\r\n\r\n","\r\n\r\nexport class User{\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(public id: number,\r\n              public personName: string,\r\n              // tslint:disable-next-line:variable-name\r\n              private _authKey: string,\r\n              public personTypeId: number\r\n  ){}\r\n\r\n\r\n\r\n  get authKey(){\r\n    if (this._authKey){\r\n      return this._authKey;\r\n    }else {\r\n      return null;\r\n    }\r\n  }\r\n  get isAuthenticated(){\r\n    if (this._authKey){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  get isOwner(){\r\n    // tslint:disable-next-line:triple-equals\r\n     return this.personTypeId == 1;\r\n  }\r\n  get isManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 2;\r\n  }\r\n  get isWorkshopManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 3;\r\n  }\r\n  get isSalesManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 4;\r\n  }\r\n  get isAccountManager(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 5;\r\n  }\r\n  get isOfficeStaff(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 6;\r\n  }\r\n  get isAgent(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 7;\r\n  }\r\n  get isWorker(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 8;\r\n  }\r\n  get isDeveloper(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 9;\r\n  }\r\n  get isCustomer(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 10;\r\n  }\r\n  get isKarigarh(){\r\n    // tslint:disable-next-line:triple-equals\r\n    return this.personTypeId == 11;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {AuthResponseData, AuthService} from '../../services/auth.service';\r\nimport {StorageMap} from '@ngx-pwa/local-storage';\r\nimport {Md5} from 'ts-md5';\r\nimport {Observable} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  isLoginMode = true;\r\n  isLoading = false;\r\n\r\n  constructor(private authService: AuthService, private storage: StorageMap, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n  onSubmit(form: NgForm){\r\n    this.isLoading = true;\r\n    let authObserable = new Observable<AuthResponseData>();\r\n    // converting password to MD5\r\n    const md5 = new Md5();\r\n    const passwordMd5 = md5.appendStr(form.value.password).end();\r\n    // const formPassword = form.value.password;\r\n\r\n    authObserable = this.authService.login({email: form.value.email, password: passwordMd5});\r\n    authObserable.subscribe(response => {\r\n      // tslint:disable-next-line:triple-equals\r\n      if (response.success === 1){\r\n        this.isLoading = false;\r\n        // tslint:disable-next-line:triple-equals\r\n        if (response.user.person_type_id == 1){\r\n          this.router.navigate(['/owner']).then(r => {});\r\n        }\r\n      }else{\r\n        alert('Check user id or Password');\r\n        this.isLoading = false;\r\n      }\r\n    }, (error) => {\r\n      console.log('error occured ');\r\n      console.log(error);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlex=\"30\" fxLayoutAlign=\"space-between\" fxFlexFill id=\"login-outer-div\">\r\n  <div *ngIf=\"isLoading\" fxLayout.xs=\"column\" fxLayout=\"row\" fxFlex=\"50\" fxLayoutAlign=\"space-between stretch\" fxFlexFill>\r\n    <div  style=\"text-align: center; height: 90vh;\" >\r\n      <app-loading-spinner></app-loading-spinner>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!isLoading\"  fxLayout=\"column\" fxLayoutAlign=\"center\"  fxFlex=\"90\" class=\"mr-1\">\r\n    <mat-card style=\"min-height: 80vh;\">\r\n      <mat-card-title>\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"!isLoading\" style=\"text-align: center\">Login</mat-card-title>\r\n      <mat-card-content >\r\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\"\r\n                     id=\"email\"\r\n                     class=\"\"\r\n                     ngModel\r\n                     name=\"email\"\r\n                     required\r\n                     minlength=\"6\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput id=\"password\" class=\"\" ngModel name=\"password\" placeholder=\"Password\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"button\">\r\n            <button mat-button class=\"btn btn-primary\" type=\"submit\" >Login</button>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CashBookService} from '../../../services/cash-book.service';\r\nimport {CashBook} from '../../../models/cash-book.model';\r\n\r\n@Component({\r\n  selector: 'app-cash-book-home',\r\n  templateUrl: './cash-book-home.component.html',\r\n  styleUrls: ['./cash-book-home.component.scss']\r\n})\r\nexport class CashBookHomeComponent implements OnInit {\r\n  cashBookList: CashBook[] = [];\r\n  constructor(private cashBookService: CashBookService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cashBookList = this.cashBookService.getCashBookList();\r\n    this.cashBookService.getCashBookListListener().subscribe(data => {\r\n       this.cashBookList = data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"100\" id=\"cash-book-div\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <table class=\"table\" id=\"income-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Date</th>\r\n          <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n          <th class=\"w-15 text-left\">Income</th>\r\n          <th class=\"w-15 text-left\">Expenditure</th>\r\n          <th class=\"w-5 text-right\">Cash</th>\r\n          <th class=\"w-5 text-right\">Bank</th>\r\n          <th class=\"w-5 text-right\">Cash Balance</th>\r\n          <th class=\"w-5 text-right\">Bank Balance</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of cashBookList; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.formatted_date}}</td>\r\n          <td class=\"text-left\">{{item.transaction_number}}</td>\r\n          <td class=\"text-left\">{{item.income}}</td>\r\n          <td class=\"text-left\">{{item.expenditure}}</td>\r\n          <td class=\"text-right\">{{item.cash | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.bank | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.cash_balance | currency:\"&#8377;\"}}</td>\r\n          <td class=\"text-right\">{{item.bank_balance | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Book, ReportService} from '../../services/report.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith, switchMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-cash-book',\r\n  templateUrl: './cash-book.component.html',\r\n  styleUrls: ['./cash-book.component.scss']\r\n})\r\nexport class CashBookComponent implements OnInit {\r\n  constructor(private formBuilder: FormBuilder, private bookService: ReportService) { }\r\n\r\n  get book() {\r\n    return this.bookForm.get('book');\r\n  }\r\n  $allBooks: Observable<Book[]>;\r\n  $filteredBooks: Observable<Book[]>;\r\n  bookForm = new FormGroup({\r\n    book: new FormControl(null, [Validators.required])\r\n  });\r\n  // bookForm = this.formBuilder.group({\r\n  //   book: [null, Validators.required]\r\n  // });\r\n\r\n  ngOnInit(): void {\r\n    this.$allBooks = this.bookService.getAllBooks();\r\n    this.$filteredBooks = this.book.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        switchMap(value => this.filterBooks(value))\r\n      );\r\n  }\r\n\r\n  private filterBooks(value: string | Book) {\r\n    let filterValue = '';\r\n    if (value) {\r\n      filterValue = typeof value === 'string' ? value.toLowerCase() : value.name.toLowerCase();\r\n      return this.$allBooks.pipe(\r\n        map(books => books.filter(book => book.name.toLowerCase().includes(filterValue)))\r\n      );\r\n    } else {\r\n      return this.$allBooks;\r\n    }\r\n  }\r\n\r\n  displayFn(book?: Book): string | undefined {\r\n    return (book ? book.name : undefined);\r\n  }\r\n  onFormSubmit() {\r\n    this.bookService.saveBook(this.bookForm.value);\r\n    this.resetForm();\r\n  }\r\n  resetForm() {\r\n    this.bookForm.reset();\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh; background-color: #dddddd\">\r\n      <h3>Angular Material Select with Search</h3>\r\n      <form [formGroup]=\"bookForm\" (ngSubmit)=\"onFormSubmit()\" class=\"book-form\">\r\n        <mat-form-field class=\"select-book\">\r\n          <input type=\"text\" placeholder=\"Select a book\" matInput formControlName=\"book\" [matAutocomplete]=\"auto\">\r\n          <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n            <mat-option *ngFor=\"let book of $filteredBooks | async\" [value]=\"book\">\r\n              {{book.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"book.hasError('required')\">\r\n            Book required.\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n        <br/>\r\n        <button mat-raised-button>Submit</button>\r\n        <button mat-raised-button type=\"button\" (click)=\"resetForm()\">Reset</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"receive-right\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {User} from '../../models/user.model';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @Input() deviceXs: boolean;\r\n  userSub: Subscription;\r\n  isAuthenticated = false;\r\n  isOwner = false;\r\n  isManager = false;\r\n  isWorker = false;\r\n  router: Router;\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n      if (user){\r\n        this.isAuthenticated = user.isAuthenticated;\r\n        this.isOwner = user.isOwner;\r\n        this.isManager = user.isManager;\r\n        this.isWorker = user.isWorker;\r\n      }else{\r\n        this.isAuthenticated = false;\r\n        this.isManager = false;\r\n        this.isWorker = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  myStyle(){\r\n    // return {'background-color': '#e83d44'};\r\n    return {\r\n      // 'background-color': 'rgba(255,0,0,' + (10 / 100) + ')',\r\n      'background-color': 'rgba(147,112,219,.3)',\r\n      color : 'white'\r\n    };\r\n  }\r\n}\r\n","<div class=\"navbar\">\r\n  <!--For Public-->\r\n  <mat-toolbar [ngStyle]=\"myStyle()\" *ngIf=\"!isAuthenticated\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n        <button mat-button >\r\n          <mat-icon>home</mat-icon>\r\n          <span class=\"logo\">Accounts</span>\r\n        </button>\r\n        <div *ngIf=\"!deviceXs\">\r\n          <button mat-button\r\n                  [routerLink]=\"['/']\"\r\n                  routerLinkActive=\"MyActiveMenu\"\r\n                  [routerLinkActiveOptions]=\"{exact: true}\">Home</button>\r\n          <button mat-button >Contact Us</button>\r\n          <button mat-button >About Us</button>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <button mat-button mat-raised-button\r\n              [routerLink]=\"['/auth']\"\r\n              routerLinkActive=\"MyActiveMenu\">Login</button>\r\n      <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <!--For Owner-->\r\n  <mat-toolbar [ngStyle]=\"myStyle()\" *ngIf=\"isAuthenticated && isOwner\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n          <button mat-button >\r\n            <mat-icon>home</mat-icon>\r\n            <span class=\"logo\">Accounts</span>\r\n          </button>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuLedger\">Master</button>\r\n          <mat-menu #menuLedger=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/ledger']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Ledger</button>\r\n          </mat-menu>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuTransaction\"><mat-icon>add</mat-icon>Transaction</button>\r\n          <mat-menu #menuTransaction=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/receive']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Receive</button>\r\n            <button mat-menu-item [routerLink]=\"['/payment']\" routerLinkActive=\"MyActiveMenu\"><mat-icon>send</mat-icon>Payment</button>\r\n          </mat-menu>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menuReport\"><mat-icon>add</mat-icon>Report</button>\r\n          <mat-menu #menuReport=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/transactions']\" routerLinkActive=\"MyActiveMenu\">Transactions</button>\r\n            <button mat-menu-item [routerLink]=\"['/incomeAndExpenditure']\" routerLinkActive=\"MyActiveMenu\">Income & Expenditure</button>\r\n            <button mat-menu-item [routerLink]=\"['/cashBook']\" routerLinkActive=\"MyActiveMenu\">Cash Book</button>\r\n          </mat-menu>\r\n      </div>\r\n      <button mat-button mat-raised-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <!--For Manager-->\r\n  <mat-toolbar color=\"accent\" *ngIf=\"isAuthenticated && isWorker\">\r\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"row\">\r\n          <button mat-button >\r\n            <mat-icon>home</mat-icon>\r\n            <span class=\"logo\">Coder</span>\r\n          </button>\r\n          <div *ngIf=\"!deviceXs\">\r\n            <button mat-button\r\n                    [routerLink]=\"['/']\"\r\n                    routerLinkActive=\"MyActiveMenu\"\r\n                    [routerLinkActiveOptions]=\"{exact: true}\">Home</button>\r\n            <button mat-button >Contact Us</button>\r\n            <button mat-button >About Us</button>\r\n          </div>\r\n          <div ngbDropdown class=\"d-inline-block\">\r\n            <button class=\"btn btn-outline-primary\" id=\"dropdownBasic3\" ngbDropdownToggle>Toggle dropdown</button>\r\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n              <button ngbDropdownItem>Action - 1</button>\r\n              <button ngbDropdownItem>Another Action</button>\r\n              <button ngbDropdownItem>Something else is here</button>\r\n            </div>\r\n          </div>\r\n\r\n          <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item [routerLink]=\"['/customer']\" routerLinkActive=\"MyActiveMenu\">Customer</button>\r\n            <button mat-menu-item [routerLink]=\"['/product']\" routerLinkActive=\"MyActiveMenu\">Product</button>\r\n          </mat-menu>\r\n\r\n\r\n      </div>\r\n      <button mat-button\r\n              [routerLink]=\"['/auth']\"\r\n              routerLinkActive=\"MyActiveMenu\">Login</button>\r\n      <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n      <div>\r\n          <button  mat-button>\r\n            <mat-icon *ngIf=\"deviceXs\">more_vert</mat-icon>\r\n            <span *ngIf=\"!deviceXs\">Menu</span>\r\n          </button>\r\n      </div>\r\n    </mat-toolbar-row>\r\n\r\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n      <button mat-button >Home</button>\r\n      <button mat-button >Contact Us</button>\r\n      <button mat-button >About Us</button>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  products: any = [];\r\n\r\n  centered = false;\r\n  disabled = false;\r\n  unbounded = false;\r\n\r\n  radius: number;\r\n  color: string;\r\n  images = [1, 2, 3, 4, 5, 6].map((n) => `assets/carousel/carousel_${n}.jpg`);\r\n  videoUrl = 'https://www.youtube.com/embed/_8kT9xbq5Vk';\r\n  public safeURL: SafeResourceUrl;\r\n  constructor(private httpClient: HttpClient, private _sanitizer: DomSanitizer) {\r\n    this.safeURL = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoUrl);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.httpClient.get('assets/data.json').subscribe(data => {\r\n      console.log(data);\r\n      this.products = data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"10\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n  </div>\r\n  <div fxFlex=\"50\" >\r\n    <div style=\"min-height: 92vh; background-color: rgba(232,177,40,0.81);\">\r\n      <app-picture-carousel></app-picture-carousel>\r\n      <iframe [src]='safeURL' width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen></iframe>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-picture-carousel',\r\n  templateUrl: './picture-carousel.component.html',\r\n  styleUrls: ['./picture-carousel.component.scss']\r\n})\r\nexport class PictureCarouselComponent {\r\n  images = [1, 2, 3, 4].map((n) => `assets/carousel/carousel_${n}.jpg`);\r\n  pictureDetails: string[] = ['Beautiful Paro', 'I love nature', 'India is great', 'Stay at Home'];\r\n  paused = false;\r\n  unpauseOnArrow = false;\r\n  pauseOnIndicator = false;\r\n  pauseOnHover = true;\r\n\r\n  @ViewChild('carousel', {static : true}) carousel: NgbCarousel;\r\n\r\n  togglePaused() {\r\n    if (this.paused) {\r\n      this.carousel.cycle();\r\n    } else {\r\n      this.carousel.pause();\r\n    }\r\n    this.paused = !this.paused;\r\n  }\r\n\r\n  onSlide(slideEvent: NgbSlideEvent) {\r\n    if (this.unpauseOnArrow && slideEvent.paused &&\r\n      (slideEvent.source === NgbSlideEventSource.ARROW_LEFT || slideEvent.source === NgbSlideEventSource.ARROW_RIGHT)) {\r\n      this.togglePaused();\r\n    }\r\n    if (this.pauseOnIndicator && !slideEvent.paused && slideEvent.source === NgbSlideEventSource.INDICATOR) {\r\n      this.togglePaused();\r\n    }\r\n  }\r\n\r\n}\r\n","<ngb-carousel #carousel [interval]=\"1000\" [pauseOnHover]=\"pauseOnHover\" (slide)=\"onSlide($event)\">\r\n  <ng-template ngbSlide *ngFor=\"let img of images; index as i\">\r\n    <div class=\"carousel-caption\">\r\n<!--      <h3>My slide {{i + 1}} title</h3>-->\r\n      <h3>{{pictureDetails[i]}} title</h3>\r\n    </div>\r\n    <a href=\"https://www.google.fr/?q=Number+{{i+1}}\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\r\n      <div class=\"picsum-img-wrapper\">\r\n        <img [src]=\"img\" alt=\"My image {{i + 1}} description\">\r\n      </div>\r\n    </a>\r\n  </ng-template>\r\n</ngb-carousel>\r\n\r\n<hr>\r\n\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"pauseOnHover\" [(ngModel)]=\"pauseOnHover\">\r\n  <label class=\"form-check-label\" for=\"pauseOnHover\">Pause on hover</label>\r\n</div>\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"unpauseOnArrow\" [(ngModel)]=\"unpauseOnArrow\">\r\n  <label class=\"form-check-label\" for=\"unpauseOnArrow\">Unpause when clicking on arrows</label>\r\n</div>\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" id=\"pauseOnIndicator\" [(ngModel)]=\"pauseOnIndicator\">\r\n  <label class=\"form-check-label\" for=\"pauseOnIndicator\">Pause when clicking on navigation indicator</label>\r\n</div>\r\n<button type=\"button\" (click)=\"togglePaused()\" class=\"btn btn-outline-dark btn-sm\" placement=\"top\" ngbTooltip=\"Click here to pause\">\r\n  {{paused ? 'Cycle' : 'Pause' }}\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ReportService} from '../../../services/report.service';\r\nexport interface IncomeAndExpenditure {\r\n  ledger_id: number;\r\n  ledger_name: string;\r\n  amount: number;\r\n}\r\n@Component({\r\n  selector: 'app-income-expenditure-by-month',\r\n  templateUrl: './income-expenditure-by-month.component.html',\r\n  styleUrls: ['./income-expenditure-by-month.component.scss']\r\n})\r\nexport class IncomeExpenditureByMonthComponent implements OnInit {\r\n  searchMonth: number;\r\n  private sub: any;\r\n  searchYear: number;\r\n  incomeList: IncomeAndExpenditure[];\r\n  expenditureList: IncomeAndExpenditure[];\r\n  incomeTotal = 0;\r\n  expenditureTotal = 0;\r\n  surplus = -1;\r\n  months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n  deficit = -1;\r\n  constructor(private route: ActivatedRoute, private reportService: ReportService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.searchMonth = +params.month; // (+) converts string 'month' to a number\r\n      this.searchYear = +params.year; // (+) converts string 'year' to a number\r\n      // @ts-ignore\r\n      this.reportService.getIncomeGroupTotalListByYearAndMonth(this.searchYear, this.searchMonth).subscribe(response => {\r\n          this.incomeList = response.data;\r\n          this.incomeTotal = this.incomeList.reduce( (total, record) => {\r\n              // @ts-ignore\r\n              return total +  record.amount;\r\n          }, 0);\r\n          if (this.incomeTotal >= this.expenditureTotal){\r\n            this.surplus = this.incomeTotal - this.expenditureTotal;\r\n            this.deficit = -1;\r\n          }else{\r\n            this.deficit = this.expenditureTotal - this.incomeTotal;\r\n            this.surplus = -1;\r\n          }\r\n      });\r\n      this.reportService.getExpenditureGroupTotalListByYearAndMonth(this.searchYear, this.searchMonth).subscribe(response => {\r\n        this.expenditureList = response.data;\r\n        this.expenditureTotal = this.expenditureList.reduce( (total, record) => {\r\n          // @ts-ignore\r\n          return total +  record.amount;\r\n        }, 0);\r\n        if (this.incomeTotal >= this.expenditureTotal){\r\n          this.surplus = this.incomeTotal - this.expenditureTotal;\r\n          this.deficit = -1;\r\n        }else{\r\n          this.deficit = this.expenditureTotal - this.incomeTotal;\r\n          this.surplus = -1;\r\n        }\r\n      });\r\n      // In a real app: dispatch action to load the details here.\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"column\">\r\n  <h1 fxFlex=\"100\">Income and Expenditure</h1>\r\n  <h3 fxFlex=\"100\">Income and Expenditure for the month of {{months[searchMonth]}}, {{searchYear}}</h3>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"50\" id=\"expenditure-left\">\r\n    <div style=\"min-height: 30vh;\">\r\n      <table class=\"table\" id=\"expenditure-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-70 text-left\">Expenditures</th>\r\n          <th class=\"w-30 text-right\">amount</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of expenditureList\">\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n          <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"50\" id=\"income-right\">\r\n    <div style=\"min-height: 30vh;\">\r\n      <table class=\"table\" id=\"income-transaction-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-70 text-left\">Incomes</th>\r\n          <th class=\"w-30 text-right\">amount</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of incomeList\">\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n          <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"40\">\r\n    <span class=\"pl-5\" *ngIf=\"surplus>0\">Surplus: Income over Expenditure</span>\r\n  </div>\r\n  <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\r\n    <span class=\"surplus\" *ngIf=\"surplus>0\">{{surplus | currency:\"&#8377;\"}}</span>\r\n  </div>\r\n  <div fxFlex=\"40\">\r\n    <span class=\"pl-5\"  *ngIf=\"surplus<=0\">Deficit: Expenditure over Income</span>\r\n  </div>\r\n  <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\r\n    <span class=\"surplus\" *ngIf=\"surplus<0\">{{deficit | currency:\"&#8377;\"}}</span>\r\n  </div>\r\n</div>\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\">\r\n  <div fxFlex=\"40\">\r\n  </div>\r\n  <div fxFlex=\"10\" class=\"total-div\">\r\n    {{(expenditureTotal>incomeTotal ? expenditureTotal : incomeTotal) | currency:\"&#8377;\"}}\r\n  </div>\r\n  <div fxFlex=\"40\">\r\n  </div>\r\n  <div fxFlex=\"10\" class=\"total-div\">\r\n      {{(expenditureTotal>incomeTotal ? expenditureTotal : incomeTotal)  | currency:\"&#8377;\"}}\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure-by-year',\r\n  templateUrl: './income-expenditure-by-year.component.html',\r\n  styleUrls: ['./income-expenditure-by-year.component.scss']\r\n})\r\nexport class IncomeExpenditureByYearComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<p>income-expenditure-by-year works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure-home',\r\n  templateUrl: './income-expenditure-home.component.html',\r\n  styleUrls: ['./income-expenditure-home.component.scss']\r\n})\r\nexport class IncomeExpenditureHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>income-expenditure-home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ReportService} from '../../services/report.service';\r\nimport {TransactionYear} from '../../models/transaction-year.model';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {MatSelectChange} from '@angular/material/select';\r\nexport interface TransactionMonth {\r\n  month_number: number;\r\n  month_name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-income-expenditure',\r\n  templateUrl: './income-expenditure.component.html',\r\n  styleUrls: ['./income-expenditure.component.scss']\r\n})\r\nexport class IncomeExpenditureComponent implements OnInit {\r\n\r\n  transactionYears: TransactionYear[] = [];\r\n  transactionMonths: TransactionMonth[] = [];\r\n  reportSearchForm: FormGroup;\r\n  constructor(private reportService: ReportService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.transactionYears = this.reportService.getTransactionYears();\r\n    this.reportService.getTransactionYearsUpdateListener().subscribe((data: TransactionYear[]) => {\r\n      this.transactionYears = data;\r\n    });\r\n\r\n    this.reportSearchForm = this.reportService.reportSearchForm;\r\n\r\n\r\n  }// end of ngOnIt\r\n\r\n  selectMonthByYear($event: MatSelectChange) {\r\n    const index = this.transactionYears.findIndex(x => x.transaction_year === $event.value);\r\n    this.transactionMonths = this.transactionYears[index].months;\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\" *ngIf=\"transactionYears\">\r\n      <div class=\"form-container mt-5\" >\r\n        <form [formGroup] = reportSearchForm>\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Year</mat-label>\r\n                <mat-select (selectionChange)=\"selectMonthByYear($event)\"  formControlName=\"search_year\">\r\n                  <mat-option *ngFor=\"let year of transactionYears\" [value]=\"year.transaction_year\">\r\n                    {{year.transaction_year}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Month</mat-label>\r\n                <mat-select formControlName=\"search_month\">\r\n                  <mat-option *ngFor=\"let month of transactionMonths\" [value]=\"month.month_number\">\r\n                    {{month.month_name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n          <button mat-button [routerLink]=\"['incomeAndExpenditureByYear',reportSearchForm.value.search_year]\" [disabled]=\"!reportSearchForm.value.search_year\"   mat-stroked-button>\r\n            Income and Expenditure by Year\r\n          </button>\r\n\r\n          <button mat-button [routerLink]=\"['incomeAndExpenditureByMonth',reportSearchForm.value.search_year,reportSearchForm.value.search_month]\" [disabled]=\"!reportSearchForm.value.search_month\"   mat-stroked-button>\r\n            Income and Expenditure by Month\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"receive-right\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"false\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       transactionYears = {{transactionYears | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {LedgerService} from '../../services/ledger.service';\r\nimport {Ledger} from \"../../models/ledger.model\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-ledger',\r\n  templateUrl: './ledger.component.html',\r\n  styleUrls: ['./ledger.component.scss']\r\n})\r\nexport class LedgerComponent implements OnInit {\r\n  ledgerForm: FormGroup;\r\n  ledgerTypes = [\r\n    { id: 1, ledger_type_name: 'Income' },\r\n    { id: 2, ledger_type_name: 'Expenditure' }\r\n  ];\r\n  expenditureLedgers: Ledger[];\r\n  incomeLedgers: Ledger[];\r\n  constructor(private ledgerService: LedgerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ledgerForm = this.ledgerService.ledgerForm;\r\n    this.incomeLedgers = this.ledgerService.getIncomeLedgers();\r\n    this.ledgerService.getIncomeLedgersUpdateListener().subscribe(data => {\r\n      this.incomeLedgers = data;\r\n    });\r\n\r\n    this.expenditureLedgers = this.ledgerService.getExpenditureLedgers();\r\n    this.ledgerService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n      this.expenditureLedgers = data;\r\n    });\r\n    // this.ledgerService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n    //   this.expenditureLedgers = data;\r\n    // });\r\n  }\r\n\r\n  saveLedger() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.ledgerService.saveLedger(this.ledgerForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Ledger saved',\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n            }).then(r => {\r\n              this.ledgerForm.patchValue({ledger_name: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"30\" id=\"left-div\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <div class=\"form-container mt-5\" >\r\n        <form [formGroup] = ledgerForm>\r\n          <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"50\" class=\"mr-2\">\r\n                <mat-label>Select Type</mat-label>\r\n                <mat-select   formControlName=\"ledger_type_id\">\r\n                  <mat-option *ngFor=\"let item of ledgerTypes\" [value]=\"item.id\">\r\n                    {{item.ledger_type_name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <mat-form-field fxFlex=\"90\" class=\"mr-2\">\r\n                <mat-label>Ledger Name</mat-label>\r\n                <input matInput placeholder=\"Ledger Name\" formControlName=\"ledger_name\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n          <button mat-button  mat-stroked-button (click)=\"saveLedger()\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"70\" id=\"right-div\">\r\n    <div fxFlex=\"50\" id=\"right-left-div\">\r\n      <h1>Expenditures</h1>\r\n      <table class=\"table\" id=\"expenditure-ledger-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Ledger</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of expenditureLedgers ; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n    <div fxFlex=\"50\" id=\"right-right-div\">\r\n      <h1>Incomes</h1>\r\n      <table class=\"table\" id=\"income-ledger-table\">\r\n        <thead>\r\n        <tr>\r\n          <th class=\"w-5 text-center\">SL.</th>\r\n          <th class=\"w-10 text-sm-left\">Ledger</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of incomeLedgers ; let indexOfElement = index;\">\r\n          <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n          <td class=\"text-left\">{{item.ledger_name}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-owner',\r\n  templateUrl: './owner.component.html',\r\n  styleUrls: ['./owner.component.scss']\r\n})\r\nexport class OwnerComponent implements OnInit {\r\n    arr = [\r\n      { value: 'abc', checked: true },\r\n      { value: 'xyz', checked: false },\r\n      { value: 'lmn', checked: true }\r\n    ];\r\n\r\n\r\n  constructor() {\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const filtered = this.arr.reduce((a, o) => (o.checked && a.push(o.value), a), []);\r\n\r\n    // const result = this.arr.filter(res => res.checked).map(ele => ele.value);\r\n\r\n    const result = this.arr.filter(({ checked }) => checked).map(({ value }) => value);\r\n    console.log(result);\r\n\r\n\r\n    const pilots = [\r\n      {\r\n        id: 40,\r\n        name: 'Poe Dameron',\r\n        years: 30,\r\n        faction: 'Empire',\r\n      },\r\n      {\r\n        id: 10,\r\n        name: 'Poe Dameron',\r\n        years: 14,\r\n        faction: 'Rebels',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Temmin \\'Snap\\' Wexley',\r\n        years: 30,\r\n        faction: 'Empire',\r\n      },\r\n      {\r\n        id: 41,\r\n        name: 'Tallissan Lintra',\r\n        years: 16,\r\n        faction: 'Rebels',\r\n      },\r\n      {\r\n        id: 99,\r\n        name: 'Ello Asty',\r\n        years: 22,\r\n        faction: 'Empire',\r\n      }\r\n    ];\r\n\r\n    const totalYears = pilots.reduce((accumulator, pilot) => accumulator + pilot.years, 0);\r\n    console.log(totalYears);\r\n\r\n    let empire = pilots.filter((pilot) => pilot.faction === 'Empire' && pilot.years === 30);\r\n\r\n    empire = pilots.filter((pilot) => [22, 30].includes(pilot.years));\r\n    console.log(empire);\r\n\r\n    const objArray = [ { foo: 1, bar: 2, baz: 9}, { foo: 3, bar: 4, baz: 10}, { foo: 5, bar: 6, baz: 20} ];\r\n\r\n    const result2 = objArray.map(({ foo, baz }) => ({ foo, baz }));\r\n\r\n\r\n    console.log(result2);\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"10\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n  </div>\r\n  <div fxFlex=\"50\" >\r\n    <div style=\"min-height: 92vh; background-color: rgba(3,2,12,0.81);\"></div>\r\n  </div>\r\n  <div fxFlex=\"60\" style=\"background-color: rgba(3,2,12,0.81);\">\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Ledger} from '../../models/ledger.model';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {Asset} from '../../models/asset.model';\r\nimport {Transaction} from '../../models/transaction.model';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\r\nimport {formatDate} from '@angular/common';\r\nimport Swal from 'sweetalert2';\r\nimport {AssetService} from '../../services/asset.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  expenditureLedgers: Ledger[] = [];\r\n  assets: Asset[] = [];\r\n  expenditureTransactions: Transaction[] = [];\r\n\r\n  transactionForm: FormGroup;\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n  constructor(private paymentService: PaymentService, private asstService: AssetService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.expenditureLedgers = this.paymentService.getExpenditureLedgers();\r\n    this.paymentService.getExpenditureLedgersUpdateListener().subscribe(data => {\r\n      this.expenditureLedgers = data;\r\n    });\r\n    this.transactionForm = this.paymentService.transactionForm;\r\n\r\n    // assets\r\n    this.assets = this.asstService.getAssets();\r\n    this.asstService.getAssetsUpdateListener().subscribe((data: Asset[]) => {\r\n      this.assets = data;\r\n    });\r\n\r\n    this.paymentService.expenditureTransactionSubject.subscribe(data => {\r\n      this.expenditureTransactions = data;\r\n    });\r\n    this.expenditureTransactions = this.paymentService.getTransactionDetails();\r\n\r\n  } // end of ngonit\r\n\r\n  handleTransactionDateChange($event: MatDatepickerInputEvent<unknown>) {\r\n    let val = this.transactionForm.value.transaction_date;\r\n    val = formatDate(val, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val});\r\n  }\r\n\r\n  saveExpenditureTransaction() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.paymentService.saveExpenditureTransaction(this.transactionForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Expenditure saved',\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            }).then(r => {\r\n              this.transactionForm.patchValue({ledger_id: null, asset_id: 1, amount: 0, particulars: null, voucher_number: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n\r\n  clearTransactionForm() {\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val, ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"40\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"income-form\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n              Expenditure Entry\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-container\">\r\n          <form [formGroup] = transactionForm>\r\n            <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <!--Transaction Date and Transaction Number-->\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <!--Transaction Date-->\r\n                <mat-form-field class=\"example-full-width\" fxFlex=\"40\">\r\n                  <mat-label>Choose a date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"handleTransactionDateChange($event)\" formControlName=\"transaction_date\" >\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker ></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Expenditure</mat-label>\r\n                  <mat-select  formControlName=\"ledger_id\">\r\n                    <mat-option *ngFor=\"let ledger of expenditureLedgers\" [value]=\"ledger.id\">\r\n                      {{ledger.ledger_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Voucher Number</mat-label>\r\n                  <input matInput placeholder=\"Voucher Number\" formControlName=\"voucher_number\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Transaction Through</mat-label>\r\n                  <mat-select  formControlName=\"asset_id\">\r\n                    <mat-option *ngFor=\"let asset of assets\" [value]=\"asset.id\">\r\n                      {{asset.assets_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Amount</mat-label>\r\n                  <input matInput type=\"number\" placeholder=\"Invoice\" (click)=\"$event.target.select()\" formControlName=\"amount\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Particulars</mat-label>\r\n                  <textarea  matInput rows=\"4\" cols=\"50\" formControlName=\"particulars\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </form>\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n            <button mat-button (click) = \"clearTransactionForm()\"   mat-stroked-button>Clear</button>\r\n            <button mat-button (click)=\"saveExpenditureTransaction()\" [disabled]=\"!transactionForm.valid\"   mat-stroked-button>Save</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" id=\"receive-right\">\r\n    <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of expenditureTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n<!--      transactionMasterForm={{this.transactionForm.valid | json}}-->\r\n<!--      transactionMasterForm={{this.transactionForm.value | json}}-->\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       transactionForm = {{transactionForm.value | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ReceiveService} from '../../services/receive.service';\r\nimport {Ledger} from '../../models/ledger.model';\r\nimport {AssetService} from '../../services/asset.service';\r\nimport {Asset} from '../../models/asset.model';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\r\nimport {formatDate} from '@angular/common';\r\nimport Swal from 'sweetalert2';\r\nimport {Transaction} from '../../models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'app-receive',\r\n  templateUrl: './receive.component.html',\r\n  styleUrls: ['./receive.component.scss']\r\n})\r\nexport class ReceiveComponent implements OnInit {\r\n  incomeLedgers: Ledger[] = [];\r\n  assets: Asset[] = [];\r\n  incomeTransactions: Transaction[] = [];\r\n\r\n  transactionForm: FormGroup\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n\r\n  constructor(private receiveService: ReceiveService, private asstService: AssetService) { }\r\n\r\n  ngOnInit(): void {\r\n  // incomeLedgers\r\n  this.incomeLedgers = this.receiveService.getIncomeLedgers();\r\n  this.receiveService.getIncomeLedgersUpdateListener().subscribe((data: Ledger[]) => {\r\n      this.incomeLedgers = data;\r\n    } );\r\n\r\n  // incomeTransactions\r\n  this.incomeTransactions = this.receiveService.getIncomeTransactions();\r\n  this.receiveService.getIncomeTransactionUpdateListener().subscribe((data: Transaction[]) => {\r\n    this.incomeTransactions = data;\r\n  });\r\n\r\n    // assets\r\n  this.assets = this.asstService.getAssets();\r\n  this.asstService.getAssetsUpdateListener().subscribe((data: Asset[]) => {\r\n      this.assets = data;\r\n    });\r\n\r\n    // setting form\r\n  this.transactionForm = this.receiveService.transactionForm;\r\n  this.transactionForm.patchValue({asset_id: 1});\r\n  }\r\n\r\n  handleTransactionDateChange($event: MatDatepickerInputEvent<unknown>) {\r\n    let val = this.transactionForm.value.transaction_date;\r\n    val = formatDate(val, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val});\r\n  }\r\n\r\n  saveIncomeTransaction() {\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to Save',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Save It!'\r\n    }).then((result) => {\r\n      // if selected yes\r\n      if (result.value) {\r\n        // will be saved from here\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        this.receiveService.saveIncomeTransaction(this.transactionForm.value).subscribe(response => {\r\n          if (response.success === 1){\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Sale saved',\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n            }).then(r => {\r\n              this.transactionForm.patchValue({ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n            });\r\n          }\r\n        }, (error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error.message,\r\n            footer: '<a href>Why do I have this issue?</a>',\r\n            timer: 0\r\n          });\r\n        });\r\n      }else{\r\n        // will not be saved\r\n      }\r\n    });\r\n  }\r\n\r\n  clearTransactionForm() {\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm.patchValue({transaction_date: val, ledger_id: null, asset_id: 1, amount: 0, particulars: null});\r\n  }\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"40\" id=\"receive-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"income-form\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n              Income Entry\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-container\">\r\n          <form [formGroup] = transactionForm>\r\n            <div class=\"container\" fxLayout=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n              <!--Transaction Date and Transaction Number-->\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <!--Transaction Date-->\r\n                <mat-form-field class=\"example-full-width\" fxFlex=\"40\">\r\n                  <mat-label>Choose a date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"handleTransactionDateChange($event)\" formControlName=\"transaction_date\" >\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker ></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Income</mat-label>\r\n                  <mat-select  formControlName=\"ledger_id\">\r\n                    <mat-option *ngFor=\"let ledger of incomeLedgers\" [value]=\"ledger.id\">\r\n                      {{ledger.ledger_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Voucher Number</mat-label>\r\n                  <input matInput placeholder=\"Voucher Number\" formControlName=\"voucher_number\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Transaction Through</mat-label>\r\n                  <mat-select  formControlName=\"asset_id\">\r\n                    <mat-option *ngFor=\"let asset of assets\" [value]=\"asset.id\">\r\n                      {{asset.assets_name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Amount</mat-label>\r\n                    <input matInput placeholder=\"Invoice\" (click)=\"$event.target.select()\" formControlName=\"amount\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Particulars</mat-label>\r\n                  <textarea  matInput rows=\"4\" cols=\"50\" formControlName=\"particulars\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </form>\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\" >\r\n            <button mat-button (click) = \"clearTransactionForm()\"   mat-stroked-button>Clear</button>\r\n            <button mat-button (click)=\"saveIncomeTransaction()\" [disabled]=\"!transactionForm.valid\"   mat-stroked-button>Save</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"60\" id=\"receive-right\">\r\n    <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let item of incomeTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n              <td class=\"text-center\">{{(indexOfElement+1) | number:'3.0'}}</td>\r\n              <td class=\"text-left\">{{item.formatted_date}}</td>\r\n              <td class=\"text-left\">{{item.transaction_number}}</td>\r\n              <td class=\"text-left\">{{item.ledger_name}}</td>\r\n              <td class=\"text-left\">{{item.assets_name}}</td>\r\n              <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n      transactionMasterForm={{this.transactionForm.valid | json}}\r\n      transactionMasterForm={{this.transactionForm.value | json}}\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n       incomeTransactions = {{incomeTransactions | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {Transaction} from '../../models/transaction.model';\r\nimport {ReceiveService} from \"../../services/receive.service\";\r\n\r\n@Component({\r\n  selector: 'app-transaction-report',\r\n  templateUrl: './transaction-report.component.html',\r\n  styleUrls: ['./transaction-report.component.scss']\r\n})\r\nexport class TransactionReportComponent implements OnInit {\r\n  expenditureTransactions: Transaction[] = [];\r\n  incomeTransactions: Transaction[] = [];\r\n  searchTerm: any;\r\n  pageSize = 10;\r\n  p = 1;\r\n  constructor(private paymentService: PaymentService, private receiveService: ReceiveService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.expenditureTransactions = this.paymentService.getTransactionDetails();\r\n    this.paymentService.getTransactionsUpdateListener().subscribe(data => {\r\n      this.expenditureTransactions = data;\r\n    });\r\n\r\n    this.incomeTransactions = this.receiveService.getIncomeTransactions();\r\n    this.receiveService.getIncomeTransactionUpdateListener().subscribe(data => {\r\n      this.incomeTransactions = data;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout.xs=\"column\" fxLayout=\"row\" fxFlexFill>\r\n  <div fxFlex=\"50\" id=\"expenditure-left\">\r\n    <div style=\"min-height: 92vh;\">\r\n        <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Expenditure Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"expenditure-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of expenditureTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'2.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"expenditure_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"50\" id=\"expenditure-right\">\r\n    <div style=\"min-height: 92vh;\">\r\n      <mat-card class=\"ml-2 mt-2 mr-2 form-mat-card\" id=\"transaction-display-right-div\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"></div>\r\n        <mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlexFill>\r\n            Income Transactions\r\n          </div>\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <div class=\"form-container\">\r\n        <form class=\"example-form\">\r\n          <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"start\" fxLayoutGap=\"30px\" fxLayoutGap.xs=\"0\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Search...\" [(ngModel)]=\"searchTerm\" name=\"search\" type=\"text\" autofocus>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Items per page\" [(ngModel)]=\"pageSize\" name=\"PageSize\" type=\"text\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n        <table class=\"table\" id=\"income-transaction-table\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"w-5 text-center\">SL.</th>\r\n            <th class=\"w-10 text-sm-left\">Date</th>\r\n            <th class=\"w-10 text-sm-left\">Trn. No.</th>\r\n            <th class=\"w-25 text-left\">Purpose</th>\r\n            <th class=\"w-15 text-left\">Type</th>\r\n            <th class=\"w-20 text-right\">amount</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of incomeTransactions | filter:searchTerm | paginate: { itemsPerPage: pageSize, currentPage: p }; let indexOfElement = index;\">\r\n            <td class=\"text-center\">{{(indexOfElement+1) | number:'2.0'}}</td>\r\n            <td class=\"text-left\">{{item.formatted_date}}</td>\r\n            <td class=\"text-left\">{{item.transaction_number}}</td>\r\n            <td class=\"text-left\">{{item.ledger_name}}</td>\r\n            <td class=\"text-left\">{{item.assets_name}}</td>\r\n            <td class=\"text-right\">{{item.amount | currency:\"&#8377;\"}}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          </tfoot>\r\n        </table>\r\n        <div fxLayout.xs=\"column\" fxLayout=\"column\" fxFlexFill>\r\n          <!--    https://www.npmjs.com/package/ngx-pagination-->\r\n          <!--    npm i ngx-pagination-->\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          <pagination-controls  id=\"some_id\"\r\n                                (pageChange)=\"p=($event)\"\r\n                                maxSize=\"5\"\r\n                                directionLinks=\"true\"\r\n                                autoHide=\"true\"\r\n                                responsive=\"true\"\r\n                                previousLabel=\"Previous\"\r\n                                nextLabel=\"Next\"\r\n                                screenReaderPaginationLabel=\"Pagination\"\r\n                                screenReaderPageLabel=\"page\"\r\n                                screenReaderCurrentLabel=\"You're on page\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout.xs=\"column\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\"  id=\"developer-div\" *ngIf=\"true\">\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #cdd20c\">\r\n    <pre>\r\n      expenditureTransactions = {{expenditureTransactions | json}}\r\n    </pre>\r\n  </div>\r\n  <div fxLayout=\"column\" fxFlex=\"50\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n    <pre>\r\n        incomeTransactions = {{incomeTransactions | json}}\r\n    </pre>\r\n\r\n  </div>\r\n\r\n\r\n  <div fxLayout=\"column\" fxFlex=\"25\" class=\"mr-1\" style=\"background-color: #f2f2f2\">\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {Asset} from '../models/asset.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class AssetService {\r\n  assets: Asset[] = [];\r\n  assetsSubject = new Subject<Asset[]>();\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/assets')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Asset[]}) => {\r\n        const {data} = response;\r\n        this.assets = data;\r\n        this.assetsSubject.next([...this.assets]);\r\n      })).subscribe();\r\n  }\r\n\r\n  getAssetsUpdateListener(){\r\n    return this.assetsSubject.asObservable();\r\n  }\r\n\r\n  getAssets(){\r\n    return [...this.assets];\r\n  }\r\n\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {User} from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate{\r\n  userSub: Subscription;\r\n  constructor(private authService: AuthService) { }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\r\n    : Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HttpParams, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport {Observable, of, throwError} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {take, exhaustMap, catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorInterceptor implements HttpInterceptor {\r\n  userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  private handleAuthError(err: HttpErrorResponse): Observable<any> {\r\n    // handle your auth error or rethrow\r\n    if (err.status === 401 || err.status === 403) {\r\n      // navigate /delete cookies or whatever\r\n      // this.router.navigateByUrl('/auth');\r\n      this.authService.logout();\r\n      // localStorage.removeItem('user');\r\n      // this.router.navigate(['/auth']);\r\n\r\n      // tslint:disable-next-line:max-line-length\r\n      // if you've caught / handled the error, you don't want to rethrow it unless you also want downstream consumers to have to handle it as well.\r\n      return of(err.message); // or EMPTY may be appropriate here\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n\r\n    if (localStorage.getItem('user')){\r\n      this.userData = JSON.parse(localStorage.getItem('user'));\r\n    }else{\r\n      this.userData = {id: 0, personName: 'No Person', _authKey: 'no key', personTypeId: 0};\r\n    }\r\n\r\n    console.log('intercepted request ... ');\r\n\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + this.userData._authKey) });\r\n\r\n    console.log('Sending request with new header now ...');\r\n\r\n    // send the newly created request\r\n    return next.handle(authReq).pipe(catchError(x => this.handleAuthError(x)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {BehaviorSubject, Subject, throwError} from 'rxjs';\r\nimport {User} from '../models/user.model';\r\nimport {Router} from '@angular/router';\r\n// global.ts file is created in shared folder to store all global variables.\r\nimport {GlobalVariable} from '../shared/global';\r\n\r\nexport interface AuthResponseData {\r\n  success: number;\r\n  token: {headers: object, original: {access_token: string, token_type: string, expires_in: number}, exception: object };\r\n  user: {id: number, person_name: string,  person_type_id: number};\r\n  message: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user = new BehaviorSubject<User>(null);\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n  isAuthenticated(){\r\n\r\n    if (this.user.value){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  autoLogin(){\r\n    const userData: {id: number, personName: string, _authKey: string, personTypeId: number} = JSON.parse(localStorage.getItem('user'));\r\n    if (!userData){\r\n      return;\r\n    }\r\n    const loadedUser = new User(userData.id, userData.personName, userData._authKey, userData.personTypeId);\r\n    if (loadedUser.authKey){\r\n      this.user.next(loadedUser);\r\n      //  if (loadedUser.isOwner){\r\n      //   this.router.navigate(['/owner']);\r\n      // }\r\n    }\r\n  }\r\n  login(loginData){\r\n    return this.http.post<AuthResponseData>(GlobalVariable.BASE_API_URL + '/login', loginData)\r\n      .pipe(catchError(this.handleError), tap(resData => {\r\n        // tslint:disable-next-line:max-line-length\r\n        if (resData.success === 1){\r\n            const user = new User(resData.user.id,\r\n              resData.user.person_name,\r\n              resData.token.original.access_token,\r\n              resData.user.person_type_id);\r\n            this.user.next(user); // here two user is used one is user and another user is subject of rxjs\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n          }\r\n      }));  // this.handleError is a method created by me\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    return throwError(errorResponse.error.message);\r\n  }\r\n\r\n  logout(){\r\n    this.user.next(null);\r\n    localStorage.removeItem('user');\r\n    this.router.navigate(['/auth']);\r\n    location.reload();\r\n    this.router.navigate(['/auth']);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Subject, throwError} from \"rxjs\";\r\nimport {CashBookComponent} from \"../pages/cash-book/cash-book.component\";\r\nimport {CashBook} from \"../models/cash-book.model\";\r\nimport {GlobalVariable} from \"../shared/global\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {Ledger} from \"../models/ledger.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class CashBookService {\r\n  cashBookList: CashBook[] = [];\r\n  cashBookSubject = new Subject<CashBook[]>();\r\n  constructor(private http: HttpClient) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/cashBook')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: CashBook[]}) => {\r\n        const {data} = response;\r\n        this.cashBookList = data;\r\n        this.cashBookSubject.next([...this.cashBookList]);\r\n      })).subscribe();\r\n  } // end of constructor\r\n\r\n  getCashBookList(){\r\n    return [...this.cashBookList];\r\n  }\r\n  getCashBookListListener(){\r\n    return this.cashBookSubject.asObservable();\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {Transaction} from \"../models/transaction.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class LedgerService {\r\n  ledgerForm: FormGroup;\r\n  incomeLedgers: Ledger[] = [];\r\n  incomeLedgerSubject = new Subject<Ledger[]>();\r\n  expenditureLedgers: Ledger[] = [];\r\n  expenditureLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.incomeLedgers = data;\r\n        this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.expenditureLedgers = data;\r\n        this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n      })).subscribe();\r\n\r\n    this.ledgerForm = new FormGroup({\r\n      id: new FormControl(null, ),\r\n      ledger_type_id: new FormControl(null, [Validators.required]),\r\n      ledger_name: new FormControl(null, [Validators.required])\r\n    });\r\n  } // end of constructor\r\n\r\n  getIncomeLedgersUpdateListener(){\r\n    return this.incomeLedgerSubject.asObservable();\r\n  }\r\n\r\n  getIncomeLedgers(){\r\n    return [...this.incomeLedgers];\r\n  }\r\n\r\n  getExpenditureLedgersUpdateListener(){\r\n    return this.expenditureLedgerSubject.asObservable();\r\n  }\r\n\r\n  getExpenditureLedgers(){\r\n    return [...this.expenditureLedgers];\r\n  }\r\n\r\n  saveLedger(ledgerData) {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<{success: number, data: Ledger}>(GlobalVariable.BASE_API_URL + '/ledgers', ledgerData)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger}) => {\r\n        if ( response.data.ledger_type_id === 1) {\r\n          this.incomeLedgers.unshift( response.data);\r\n          this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n        }else{\r\n          this.expenditureLedgers.unshift( response.data);\r\n          this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n        }\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {Transaction} from '../models/transaction.model';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {formatDate} from '@angular/common';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class PaymentService {\r\n  expenditureLedgers: Ledger[] = [];\r\n  expenditureLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  expenditureTransactions: Transaction[] = [];\r\n  expenditureTransactionSubject = new Subject<Transaction[]>();\r\n  transactionForm: FormGroup;\r\n  private readonly userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    if (!this.userData){\r\n      return;\r\n    }\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.expenditureLedgers = data;\r\n        this.expenditureLedgerSubject.next([...this.expenditureLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/expenditureTransactions')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction[]}) => {\r\n        const {data} = response;\r\n        this.expenditureTransactions = data;\r\n        this.expenditureTransactionSubject.next([...this.expenditureTransactions]);\r\n      })).subscribe();\r\n\r\n    // form creation\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      transaction_date: new FormControl(val, [Validators.required]),\r\n      ledger_id: new FormControl(null, [Validators.required]),\r\n      asset_id: new FormControl(1, [Validators.required]),           // purchase\r\n      voucher_number: new FormControl(null),\r\n      amount: new FormControl(0, [Validators.required]),\r\n      voucher_id: new FormControl(2, [Validators.required]),\r\n      particulars: new FormControl(null, [Validators.maxLength(255)]),\r\n      user_id: new FormControl(this.userData.id, [Validators.required])\r\n    });\r\n  }// end of constructor\r\n\r\n  getExpenditureLedgersUpdateListener(){\r\n    return this.expenditureLedgerSubject.asObservable();\r\n  }\r\n\r\n  getExpenditureLedgers(){\r\n    return [...this.expenditureLedgers];\r\n  }\r\n\r\n  getTransactionsUpdateListener(){\r\n    return this.expenditureTransactionSubject.asObservable();\r\n  }\r\n\r\n  getTransactionDetails(){\r\n    return [...this.expenditureTransactions];\r\n  }\r\n\r\n  saveExpenditureTransaction(transactionFormValue) {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<{success: number, data: Transaction}>(GlobalVariable.BASE_API_URL + '/expenditureTransactions', transactionFormValue)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction}) => {\r\n        this.expenditureTransactions.unshift( response.data);\r\n        this.expenditureTransactionSubject.next([...this.expenditureTransactions]);\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {Subject, throwError} from 'rxjs';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {formatDate} from '@angular/common';\r\nimport {Transaction} from '../models/transaction.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class ReceiveService {\r\n  incomeLedgers: Ledger[] = [];\r\n  incomeLedgerSubject = new Subject<Ledger[]>();\r\n\r\n  incomeTransactions: Transaction[] = [];\r\n  incomeTransactionSubject = new Subject<Transaction[]>();\r\n\r\n  transactionForm: FormGroup;\r\n  private readonly userData: {id: number, personName: string, _authKey: string, personTypeId: number};\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.userData = JSON.parse(localStorage.getItem('user'));\r\n    if (!this.userData){\r\n      return;\r\n    }else{\r\n      console.log(this.userData);\r\n    }\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgers')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Ledger[]}) => {\r\n        const {data} = response;\r\n        this.incomeLedgers = data;\r\n        this.incomeLedgerSubject.next([...this.incomeLedgers]);\r\n      })).subscribe();\r\n\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/incomeTransactions')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction[]}) => {\r\n        const {data} = response;\r\n        this.incomeTransactions = data;\r\n        this.incomeTransactionSubject.next([...this.incomeTransactions]);\r\n      })).subscribe();\r\n\r\n    // form creation\r\n    const now = new Date();\r\n    const val = formatDate(now, 'yyyy-MM-dd', 'en');\r\n    this.transactionForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      transaction_date: new FormControl(val, [Validators.required]),\r\n      ledger_id: new FormControl(null, [Validators.required]),\r\n      asset_id: new FormControl(1, [Validators.required]),           // purchase\r\n      voucher_number: new FormControl(null),\r\n      amount: new FormControl(0, [Validators.required]),\r\n      voucher_id: new FormControl(1, [Validators.required]),\r\n      particulars: new FormControl(null, [Validators.maxLength(255)]),\r\n      user_id: new FormControl(this.userData.id, [Validators.required])\r\n    });\r\n  }// end of constructor\r\n\r\n  getIncomeLedgersUpdateListener(){\r\n    return this.incomeLedgerSubject.asObservable();\r\n  }\r\n\r\n  getIncomeLedgers(){\r\n    return [...this.incomeLedgers];\r\n  }\r\n\r\n  getIncomeTransactionUpdateListener(){\r\n    return this.incomeTransactionSubject.asObservable();\r\n  }\r\n\r\n  getIncomeTransactions(){\r\n    return [...this.incomeTransactions];\r\n  }\r\n\r\n  saveIncomeTransaction(transactionFormValue){\r\n    return this.http.post<{success: number, data: Transaction}>(GlobalVariable.BASE_API_URL + '/incomeTransactions', transactionFormValue)\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: Transaction}) => {\r\n          this.incomeTransactions.unshift( response.data);\r\n          this.incomeTransactionSubject.next([...this.incomeTransactions]);\r\n      }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['/auth']).then();\r\n      this.router.navigate(['/owner']).then(r => {console.log(r); });\r\n      location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    console.log('sever error:', err);  // debug\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {GlobalVariable} from '../shared/global';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {Ledger} from '../models/ledger.model';\r\nimport {of, Subject, throwError} from 'rxjs';\r\nimport {TransactionYear} from '../models/transaction-year.model';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\nimport {AuthService} from './auth.service';\r\nexport interface Book {\r\n  id: number;\r\n  name: string;\r\n  writer: string;\r\n}\r\n\r\nconst ALL_BOOKS: Book[] = [\r\n  { id: 101, name: 'Godaan', writer: 'Premchand' },\r\n  { id: 102, name: 'Karmabhoomi', writer: 'Premchand' },\r\n  { id: 103, name: 'Pinjar', writer: 'Amrita Pritam' },\r\n  { id: 104, name: 'Kore Kagaz', writer: 'Amrita Pritam' },\r\n  { id: 105, name: 'Nirmala', writer: 'Premchand' },\r\n  { id: 106, name: 'Seva Sadan', writer: 'Premchand' }\r\n];\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// @ts-ignore\r\nexport class ReportService {\r\n  transactionYears: TransactionYear[] = [];\r\n  transactionYearSubject = new Subject<TransactionYear[]>();\r\n  reportSearchForm: FormGroup;\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.http.get(GlobalVariable.BASE_API_URL + '/transactionYears')\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: TransactionYear[]}) => {\r\n        const {data} = response;\r\n        this.transactionYears = data;\r\n        this.transactionYearSubject.next([...this.transactionYears]);\r\n      })).subscribe();\r\n\r\n    this.reportSearchForm = new FormGroup({\r\n      search_year: new FormControl(null, [Validators.required]),\r\n      search_month: new FormControl(null)\r\n    });\r\n\r\n  }// end of constructor\r\n\r\n\r\n  getTransactionYears(){\r\n    return [...this.transactionYears];\r\n  }\r\n  getTransactionYearsUpdateListener(){\r\n    return this.transactionYearSubject.asObservable();\r\n  }\r\n\r\n\r\n  getIncomeGroupTotalListByYearAndMonth(year: number, month: number){\r\n    return this.http.get(GlobalVariable.BASE_API_URL + '/incomeLedgersTotal/' + year + '/' + month )\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: any}) => {\r\n          console.log(response);\r\n      }));\r\n  }\r\n  getExpenditureGroupTotalListByYearAndMonth(year: number, month: number){\r\n    return this.http.get(GlobalVariable.BASE_API_URL + '/expenditureLedgersTotal/' + year + '/' + month )\r\n      .pipe(catchError(this.handleError), tap((response: {success: number, data: any}) => {\r\n        console.log(response);\r\n      }));\r\n  }\r\n\r\n\r\n  private handleError(errorResponse: HttpErrorResponse){\r\n    // when your api server is not working\r\n    if (errorResponse.status === 0){\r\n      alert('your API is not working');\r\n    }\r\n    if (errorResponse.status === 401){\r\n      alert(errorResponse.error.message);\r\n      // this.router.navigate(['auth']).then(r => {});\r\n      // location.reload();\r\n    }\r\n\r\n    if (errorResponse.error.message.includes('1062')){\r\n      return throwError({success: 0, status: 'failed', message: 'Record already exists', statusText: ''});\r\n    }else if (errorResponse.error.message.includes('1451')){\r\n      return throwError({success: 0, status: 'failed', message: 'This record can not be deleted', statusText: ''});\r\n    }else {\r\n      return throwError(errorResponse.error.message);\r\n    }\r\n  }\r\n\r\n  private serverError(err: any) {\r\n    if (err instanceof Response) {\r\n      return throwError({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n      // if you're using lite-server, use the following line\r\n      // instead of the line above:\r\n      // return Observable.throw(err.text() || 'backend server error');\r\n    }\r\n    if (err.status === 0){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Backend Server is not Working', statusText: err.statusText});\r\n    }\r\n    if (err.status === 401){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Your are not authorised', statusText: err.statusText});\r\n    }\r\n    if (err.status === 500){\r\n      // tslint:disable-next-line:label-position\r\n      return throwError ({success: 0, status: err.status, message: 'Server error', statusText: err.statusText});\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n\r\n  getAllBooks() {\r\n    return of(ALL_BOOKS);\r\n  }\r\n  saveBook(books) {\r\n    console.log(JSON.stringify(books));\r\n  }\r\n\r\n}\r\n","import {backgroundColor} from \"html2canvas/dist/types/css/property-descriptors/background-color\";\r\nimport {fontFamily} from \"html2canvas/dist/types/css/property-descriptors/font-family\";\r\nimport {fontWeight} from \"html2canvas/dist/types/css/property-descriptors/font-weight\";\r\n\r\nexport const GlobalVariable = Object.freeze({\r\n  BASE_API_URL: 'http://127.0.0.1:8000/api',\r\n  // ... more of your variables\r\n});\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.scss']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-spinner\">\r\n  <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-ellipsis',\r\n  templateUrl: './loaidng-ellipsis.component.html',\r\n  styleUrls: ['./loaidng-ellipsis.component.scss']\r\n})\r\nexport class LoaidngEllipsisComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-hourglass',\r\n  templateUrl: './loaidng-hourglass.component.html',\r\n  styleUrls: ['./loaidng-hourglass.component.scss']\r\n})\r\nexport class LoaidngHourglassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-hourglass\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-ripple',\r\n  templateUrl: './loaidng-ripple.component.html',\r\n  styleUrls: ['./loaidng-ripple.component.scss']\r\n})\r\nexport class LoaidngRippleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ripple\"><div></div><div></div></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loaidng-roller',\r\n  templateUrl: './loaidng-roller.component.html',\r\n  styleUrls: ['./loaidng-roller.component.scss']\r\n})\r\nexport class LoaidngRollerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-roller\">\r\n  <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}